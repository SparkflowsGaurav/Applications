{	"name": "Kafka Streaming - Bike Sharing",	"uuid": "d817f446-9c0a-4093-80ec-64fe67143dfa",	"category": "Bike Sharing Analytics",	"description": "Graph Number of Bikes Rented per hour",	"nodes": [		{			"id": "1",			"name": "Streaming Kafka",			"description": "Reads in streaming text from topics in Apache Kafka",			"details": "",			"examples": "",			"type": "sparkstreaming",			"nodeClass": "fire.nodes.streaming.NodeStreamingKafka",			"x": "19.4219px",			"y": "318.562px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "batchDuration",					"value": "30",					"widget": "textfield",					"title": "Batch Duration in Seconds",					"description": "Batch Duration in Seconds",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "brokers",					"value": "localhost:9092",					"widget": "textfield",					"title": "Kafka Brokers",					"description": "Kafka Brokers",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "group",					"value": "21",					"widget": "textfield",					"title": "Consumer Group",					"description": "Consumer Group",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "topics",					"value": "bike-sharing",					"widget": "textfield",					"title": "Kafka Topics",					"description": "List of Topics separated by , (comma)",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "autoOffsetReset",					"value": "latest",					"widget": "textfield",					"title": "auto.offset.reset",					"description": "Auto Offset Reset",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "enableAutoCommit",					"value": "true",					"widget": "textfield",					"title": "enable.auto.commit",					"description": "Enable Auto Commit",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "kafkaParamsKeys",					"value": "[]",					"widget": "key_array",					"title": "Params Key/Value Pairs",					"description": "More Config Values",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "kafkaParamsValues",					"value": "[]",					"widget": "value_array",					"title": "Parms Key/Value Pairs",					"description": "More Config Values",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "2",			"name": "PrintNRows",			"description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",			"details": "",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.util.NodePrintFirstNRows",			"x": "771.094px",			"y": "298.547px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "Row Values",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "n",					"value": "10",					"widget": "textfield",					"title": "Num Rows to Print",					"description": "number of rows to be printed",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "displayDataType",					"value": "true",					"widget": "array",					"title": "Display Data Type",					"description": "If true display rows DataType",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "4",			"name": "FieldSplitter",			"description": "This node splits the string of the specified input column using the specified delimiter",			"details": "Splits the string of the specified input column using the specified delimiter. The new column names are specified by the user.<br>\n<br>\nThe new dataframe would have the new columns added to it.<br>",			"examples": "If a String Column stores values in [PRD_CD]:[PRD_NAME] format and incoming Dataframe has a value as CD01:DrillMachine <br>\nthen using : as Separator to split data into two Columns (Col1, Col2) would result in followings:<br>\n<br>\n<ul>\n<li> Col1 : CD01</li>\n<li> Col2 : DrillMachine</li>\n</ul>",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeFieldSplitter",			"x": "140.047px",			"y": "329.328px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "inputCol",					"value": "line",					"widget": "variable",					"title": "Input Column",					"description": "Input column name",					"datatypes": [						"string"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputCols",					"value": "datetime,season,holiday,workingday,weather,temp,atemp,humidity,windspeed,casual,registered,count",					"widget": "textarea_small",					"title": "Output Columns",					"description": "New column names separated by comma (eg: col1,co2,col3)",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "sep",					"value": ",",					"widget": "textfield",					"title": "Separator",					"description": "Separator to split the input column value (default: space)",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "onError",					"value": "die",					"widget": "array",					"title": "On Error",					"description": "",					"optionsArray": [						"die",						"ignore"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "5",			"name": "GraphGroupByColumn",			"description": "Groups the data by the given column and plots the number of records in each group",			"details": "",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.graph.NodeGraphGroupByColumn",			"x": "594.047px",			"y": "299.312px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "Graph Grouped by Column",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "xlabel",					"value": "X axis",					"widget": "textfield",					"title": "X Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "ylabel",					"value": "Y axis",					"widget": "textfield",					"title": "Y Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxValuesToDisplay",					"value": "20",					"widget": "textfield",					"title": "Max Values To Display",					"description": "Maximum number of values to display in result.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "chartColors",					"value": "",					"widget": "colors",					"title": "Chart Colors",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "groupByColumn",					"value": "datetime_dt_hour",					"widget": "variable",					"title": "Group By Column",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "graphType",					"value": "COLUMNCHART",					"widget": "enum",					"title": "Chart Type",					"optionsMap": {						"COLUMNCHART": "Column Chart",						"BARCHART": "Bar Chart",						"LINECHART": "Line Chart",						"HISTOGRAM": "Histogram Chart"					},					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "6",			"name": "DateTimeFieldExtract",			"description": "It creates a new DataFrame by extracting Date and Time fields.",			"details": "It creates a new DataFrame by extracting Date and Time fields.<br>\n<br>\nThe output DataFrame has year/month/dayofmonth/hour/minute/second values extracted from the specified TimeStamp column into new columns<br>",			"examples": "If incoming Dataframe has Date value as 2018-01-01 14:30:45 in YYYY-MM-DD HH:mm:ss format then using datetimeextract node would result in followings <br>\nadded as new columns to the Dataframe:<br>\n<br>\n<ul>\n<li> YEAR : 2018 </li>\n<li> MONTH : 01</li>\n<li> DAY OF MONTH : 01 </li>\n<li> HOUR : 14</li>\n<li> MINUTE : 30</li>\n<li> SECOND : 45</li>\n<li> WEEKOFYEAR : 1</li>\n</ul>",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeDateTimeFieldExtract",			"x": "444.719px",			"y": "319.969px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "inputCol",					"value": "datetime_dt",					"widget": "variable",					"title": "Column",					"description": "The input column name",					"datatypes": [						"date",						"timestamp"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "extractYear",					"value": "true",					"widget": "array",					"title": "Extract Year",					"description": "Extract Year",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "extractMonth",					"value": "true",					"widget": "array",					"title": "Extract Month",					"description": "Extract Month",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "extractDayOfMonth",					"value": "true",					"widget": "array",					"title": "Extract Day of Month",					"description": "Extract Day of Month",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "extractHour",					"value": "true",					"widget": "array",					"title": "Extract Hour",					"description": "Extract Hour",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "extractMinute",					"value": "false",					"widget": "array",					"title": "Extract Minute",					"description": "Extract Minute",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "extractSecond",					"value": "false",					"widget": "array",					"title": "Extract Second",					"description": "Extract Second",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "extractWeekOfYear",					"value": "false",					"widget": "array",					"title": "Extract WeekOfYear",					"description": "Extract WeekOfYear",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "9",			"name": "StringToDate",			"description": "This node converts string columns to date using the specified date/time format",			"details": "This node converts multiple string columns to date/time.<br>",			"examples": "<h2>Format Examples</h2>\n<br>\n<ul>\n<li> dd-MM-yy : 31-01-12</li>\n<li> dd-MM-yyyy : 31-01-2012</li>\n<li> MM-dd-yyyy : 01-31-2012</li>\n<li> yyyy-MM-dd : 2012-01-31</li>\n<li> yyyy-MM-dd HH:mm:ss : 2012-01-31 23:59:59</li>\n<li> yyyy-MM-dd HH:mm:ss.SSS : 2012-01-31 23:59:59.999</li>\n<li> yyyy-MM-dd HH:mm:ss.SSSZ : 2012-01-31 23:59:59.999+0100</li>\n<li> EEEEE MMMMM yyyy HH:mm:ss.SSSZ : Saturday November 2012 10:45:42.720+0100</li>\n</ul>",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeMultiStringToDate",			"x": "274.25px",			"y": "322px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "inputColNames",					"value": "[\"datetime\"]",					"widget": "variables_list_select",					"title": "Columns",					"description": "Columns",					"datatypes": [						"string"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "inputColFormats",					"value": "[\"dd/MM/yyyy HH:mm\"]",					"widget": "variables_list_textfield",					"title": "Input Column Formats",					"description": "Input Column Formats. eg: yyyy-MM-dd yyyy-MM-dd HH:mm:ss",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"datetime_dt\"]",					"widget": "variables_list_textfield",					"title": "Output Column Names",					"description": "Output Column Names",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"TIMESTAMP\"]",					"widget": "variables_list_array",					"title": "New Data Types",					"description": "New data types (DATE, TIMESTAMP)",					"optionsArray": [						"DATE",						"TIMESTAMP"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "10",			"name": "Sticky Note",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "12px",			"y": "1px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "gray",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "861px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "292px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<h2>Kafka Streaming Workflow</h2><p><br></p><p>This workflow reads in events from the Kafka topic '<strong>bike_sharing</strong>'</p><ul><li>Calculates the number of bikes rented on an hourly basis.</li><li>Displays the results on a Graph</li></ul><p><br></p><h3><strong>Start Kafka and create Topic 'bike-sharing'</strong></h3><p><br></p><ul><li>The quick start guide of Kafka is at :&nbsp;<strong>https://kafka.apache.org/quickstart</strong></li><li class=\"ql-indent-1\">Create the topic '<strong>bike-sharing</strong>' in Kafka</li><li class=\"ql-indent-2\"><strong>kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic bike-sharing</strong></li></ul><p><br></p><h3><strong>Send the data file 'bike_sharing_noheader.csv' to the Kafka Topic 'bike-sharing'</strong></h3><p><br></p><ul><li><strong>bike_sharing_noheader.csv</strong> is in the data directory of the Fire Install</li><li><strong>cat bike_sharing_noheader.csv | kafka-console-producer.sh --broker-list localhost:9092 --topic bike-sharing (assuming the Kafka broker is running at localhost:9092)</strong></li></ul><p><br></p><h3><strong>Run the workflows on the Spark Cluster</strong></h3><p><br></p><ul><li><strong>This would start a spark streaming job on the Spark Cluster</strong></li><li><strong>You can keep pushing the data file to the Kafka topic for processing</strong></li></ul>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		}	],	"edges": [		{			"source": "1",			"target": "4",			"id": 1		},		{			"source": "5",			"target": "2",			"id": 2		},		{			"source": "6",			"target": "5",			"id": 3		},		{			"source": "4",			"target": "9",			"id": 4		},		{			"source": "9",			"target": "6",			"id": 5		}	],	"dataSetDetails": [],	"engine": "scala"}