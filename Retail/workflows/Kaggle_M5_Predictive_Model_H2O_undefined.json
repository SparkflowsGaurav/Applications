{  "name": "Kaggle_M5_Predictive_Model_H2O",  "uuid": "cdc57a34-18de-4ad2-8c5c-7bf69b4a7c4e",  "category": "-",  "nodes": [    {      "id": "3",      "name": "Read CSV",      "description": "It reads in CSV files and creates a DataFrame from it",      "details": "This node reads CSV files and creates a DataFrame from it.<br>",      "examples": "",      "type": "dataset",      "nodeClass": "fire.nodes.dataset.NodeDatasetCSV",      "x": "98.9883px",      "y": "446.988px",      "hint": "Whenever the file is changed, Refresh the Schema",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "path",          "value": "/home/sparkflows/fire-data/data/sell_pricesMod.csv",          "widget": "textfield",          "title": "Path",          "description": "Path of the Text file/directory",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "separator",          "value": ",",          "widget": "textfield",          "title": "Separator",          "description": "CSV Separator",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "header",          "value": "true",          "widget": "array",          "title": "Header",          "description": "Does the file have a header row",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "dropSpecialCharacterInColumnName",          "value": "true",          "widget": "array",          "title": "Drop Special Character In ColumnName",          "description": "Drop the SpecialCharacter and Space in Column Name.",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "dropMalformed",          "value": "false",          "widget": "array",          "title": "Drop Malformed",          "description": "Whether to drop Malformed records or error",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColNames",          "value": "[\"storeid\",\"itemid\",\"wmyrwk\",\"sellprice\"]",          "widget": "schema_col_names",          "title": "Column Names for the CSV",          "description": "New Output Columns of the SQL",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColTypes",          "value": "[\"INTEGER\",\"INTEGER\",\"INTEGER\",\"DOUBLE\"]",          "widget": "schema_col_types",          "title": "Column Types for the CSV",          "description": "Data Type of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColFormats",          "value": "[\"\",\"\",\"\",\"\"]",          "widget": "schema_col_formats",          "title": "Column Formats for the CSV",          "description": "Format of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "8",      "name": "Join On Common Column",      "description": "This node joins the incoming dataframes using one common column between them.",      "details": "This node joins the incoming dataframes using one common column between the two dataframes. <br>\n<br>\nSelect the Common Join Column to be used in the Join.<br>",      "examples": "",      "type": "join",      "nodeClass": "fire.nodes.etl.NodeJoinUsingColumn",      "x": "458.988px",      "y": "353.988px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "joinCol",          "value": "wmyrwk",          "widget": "variable_common",          "title": "Common Join Column",          "description": "column on which to join",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "joinType",          "value": "inner",          "widget": "array",          "title": "JoinType",          "description": "type of join",          "optionsArray": [            "inner",            "outer",            "leftouter",            "rightouter",            "leftsemi",            "leftanti"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "schema",          "value": "",          "widget": "tab",          "title": "Schema",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColNames",          "value": "[\"wmyrwk\",\"storeid\",\"itemid\",\"sellprice\",\"date\",\"weekday\",\"wday\",\"month\",\"year\",\"eventname1\",\"eventtype1\",\"eventname2\",\"eventtype2\",\"snapCA\",\"snapTX\",\"snapWI\"]",          "widget": "schema_col_names",          "title": "Output Column Names",          "description": "Name of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColTypes",          "value": "[\"INTEGER\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\"]",          "widget": "schema_col_types",          "title": "Output Column Types",          "description": "Data Type of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColFormats",          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",          "widget": "schema_col_formats",          "title": "Output Column Formats",          "description": "Format of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "13",      "name": "Sticky Note",      "description": "Allows capturing Notes on the Workflow",      "details": "",      "examples": "",      "type": "sticky",      "nodeClass": "fire.nodes.doc.NodeStickyNote",      "x": "426.992px",      "y": "477.98px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "bgColor",          "value": "gray",          "widget": "textfield",          "title": "Bg Color",          "description": "Background of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "width",          "value": "145px",          "widget": "textfield",          "title": "Width",          "description": "Width of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "height",          "value": "73px",          "widget": "textfield",          "title": "Height",          "description": "Height of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "comment",          "value": "<p>joined common column \"wm_yr_wk\"</p>",          "widget": "textarea_rich",          "title": "Comment",          "description": "Comments for the Workflow",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "20",      "name": "Sticky Note",      "description": "Allows capturing Notes on the Workflow",      "details": "",      "examples": "",      "type": "sticky",      "nodeClass": "fire.nodes.doc.NodeStickyNote",      "x": "661.992px",      "y": "371.992px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "bgColor",          "value": "gray",          "widget": "textfield",          "title": "Bg Color",          "description": "Background of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "width",          "value": "132px",          "widget": "textfield",          "title": "Width",          "description": "Width of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "height",          "value": "61px",          "widget": "textfield",          "title": "Height",          "description": "Height of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "comment",          "value": "<p>joined on common column \"item_id\"</p>",          "widget": "textarea_rich",          "title": "Comment",          "description": "Comments for the Workflow",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "41",      "name": "Read CSV",      "description": "It reads in CSV files and creates a DataFrame from it",      "details": "This node reads CSV files and creates a DataFrame from it.<br>",      "examples": "",      "type": "dataset",      "nodeClass": "fire.nodes.dataset.NodeDatasetCSV",      "x": "96.9844px",      "y": "230.984px",      "hint": "Whenever the file is changed, Refresh the Schema",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "path",          "value": "/home/sparkflows/fire-data/data/meltedSales_validMod.csv",          "widget": "textfield",          "title": "Path",          "description": "Path of the Text file/directory",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "separator",          "value": ",",          "widget": "textfield",          "title": "Separator",          "description": "CSV Separator",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "header",          "value": "true",          "widget": "array",          "title": "Header",          "description": "Does the file have a header row",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "dropSpecialCharacterInColumnName",          "value": "true",          "widget": "array",          "title": "Drop Special Character In ColumnName",          "description": "Drop the SpecialCharacter and Space in Column Name.",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "dropMalformed",          "value": "false",          "widget": "array",          "title": "Drop Malformed",          "description": "Whether to drop Malformed records or error",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColNames",          "value": "[\"c0\",\"id\",\"itemid\",\"deptid\",\"catid\",\"stateid\",\"d\",\"sales\"]",          "widget": "schema_col_names",          "title": "Column Names for the CSV",          "description": "New Output Columns of the SQL",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColTypes",          "value": "[\"INTEGER\",\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"STRING\",\"INTEGER\"]",          "widget": "schema_col_types",          "title": "Column Types for the CSV",          "description": "Data Type of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColFormats",          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",          "widget": "schema_col_formats",          "title": "Column Formats for the CSV",          "description": "Format of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "48",      "name": "Read CSV",      "description": "It reads in CSV files and creates a DataFrame from it",      "details": "This node reads CSV files and creates a DataFrame from it.<br>",      "examples": "",      "type": "dataset",      "nodeClass": "fire.nodes.dataset.NodeDatasetCSV",      "x": "100.98px",      "y": "334.98px",      "hint": "Whenever the file is changed, Refresh the Schema",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "path",          "value": "/home/sparkflows/fire-data/data/calendarMod.csv",          "widget": "textfield",          "title": "Path",          "description": "Path of the Text file/directory",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "separator",          "value": ",",          "widget": "textfield",          "title": "Separator",          "description": "CSV Separator",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "header",          "value": "true",          "widget": "array",          "title": "Header",          "description": "Does the file have a header row",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "dropSpecialCharacterInColumnName",          "value": "true",          "widget": "array",          "title": "Drop Special Character In ColumnName",          "description": "Drop the SpecialCharacter and Space in Column Name.",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "dropMalformed",          "value": "false",          "widget": "array",          "title": "Drop Malformed",          "description": "Whether to drop Malformed records or error",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColNames",          "value": "[\"date\",\"wmyrwk\",\"weekday\",\"wday\",\"month\",\"year\",\"eventname1\",\"eventtype1\",\"eventname2\",\"eventtype2\",\"snapCA\",\"snapTX\",\"snapWI\"]",          "widget": "schema_col_names",          "title": "Column Names for the CSV",          "description": "New Output Columns of the SQL",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColTypes",          "value": "[\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\"]",          "widget": "schema_col_types",          "title": "Column Types for the CSV",          "description": "Data Type of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColFormats",          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",          "widget": "schema_col_formats",          "title": "Column Formats for the CSV",          "description": "Format of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "50",      "name": "Join On Common Column",      "description": "This node joins the incoming dataframes using one common column between them.",      "details": "This node joins the incoming dataframes using one common column between the two dataframes. <br>\n<br>\nSelect the Common Join Column to be used in the Join.<br>",      "examples": "",      "type": "join",      "nodeClass": "fire.nodes.etl.NodeJoinUsingColumn",      "x": "699.984px",      "y": "276.984px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "joinCol",          "value": "itemid",          "widget": "variable_common",          "title": "Common Join Column",          "description": "column on which to join",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "joinType",          "value": "inner",          "widget": "array",          "title": "JoinType",          "description": "type of join",          "optionsArray": [            "inner",            "outer",            "leftouter",            "rightouter",            "leftsemi",            "leftanti"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "schema",          "value": "",          "widget": "tab",          "title": "Schema",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColNames",          "value": "[\"itemid\",\"wmyrwk\",\"storeid\",\"sellprice\",\"date\",\"weekday\",\"wday\",\"month\",\"year\",\"eventname1\",\"eventtype1\",\"eventname2\",\"eventtype2\",\"snapCA\",\"snapTX\",\"snapWI\",\"c0\",\"id\",\"deptid\",\"catid\",\"stateid\",\"d\",\"sales\"]",          "widget": "schema_col_names",          "title": "Output Column Names",          "description": "Name of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColTypes",          "value": "[\"INTEGER\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"STRING\",\"INTEGER\"]",          "widget": "schema_col_types",          "title": "Output Column Types",          "description": "Data Type of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColFormats",          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",          "widget": "schema_col_formats",          "title": "Output Column Formats",          "description": "Format of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "51",      "name": "Split",      "description": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).",      "details": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data.<br>\n<br>\nFor example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).<br>\n<br>\nThe split node can be used for splitting the DataFrame for training and test datasets used in Machine Learning.<br>",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.ml.NodeSplit",      "x": "837.984px",      "y": "292.98px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "fraction1",          "value": ".8",          "widget": "textfield",          "title": "Fraction 1",          "description": "Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "53",      "name": "H2O Score",      "description": "Scores the data using the H2O model",      "details": "",      "examples": "",      "type": "ml-predict",      "nodeClass": "fire.nodes.h2o.NodeH2OScore",      "x": "1030.98px",      "y": "408.984px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "56",      "name": "Print N Rows",      "description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",      "details": "This node is used to print incoming dataset.<br>\n<br>\nNumber of rows that needs to be printed can be configured in the node.<br>",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",      "x": "1167.99px",      "y": "417.988px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "title",          "value": "Row Values",          "widget": "textfield",          "title": "Title",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "n",          "value": "10",          "widget": "textfield",          "title": "Num Rows to Print",          "description": "number of rows to be printed",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "displayDataType",          "value": "true",          "widget": "array",          "title": "Display Data Type",          "description": "If true display rows DataType",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "59",      "name": "H2O Gradient Boosting Machine",      "description": "Gradient Boosting Machine (for Regression and Classification) is a forward learning ensemble method",      "details": "Gradient Boosting Machine (for Regression and Classification) is a forward learning ensemble method. The guiding heuristic is that good predictive results can be obtained through increasingly refined approximations. H2O’s GBM sequentially builds regression trees on all the features of the dataset in a fully distributed way - each tree is built in parallel.<br>\n<br>\nMore details are available at : <a href=\"http://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/gbm.html\" target=\"_blank\">docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/gbm.html</a><br>",      "examples": "",      "type": "ml-estimator",      "nodeClass": "fire.nodes.h2o.NodeH2OGbm",      "x": "1031.99px",      "y": "255.984px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "isResponseIsCategorical",          "value": "false",          "widget": "array",          "title": "isResponseColIsCategorical",          "description": "Specify a response column type(numeric or categorical). Separates the Classification and Regression",          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "labelCol",          "value": "sales",          "widget": "variable",          "title": "Label Column",          "description": "Response variable column.",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "featuresCols",          "value": "[\"wmyrwk\",\"storeid\",\"sellprice\",\"date\",\"weekday\",\"wday\",\"month\",\"year\",\"eventname1\",\"eventtype1\",\"eventname2\",\"eventtype2\",\"snapCA\",\"snapTX\",\"snapWI\",\"c0\",\"id\",\"deptid\",\"catid\",\"stateid\",\"d\"]",          "widget": "variables",          "title": "Feature Columns",          "description": "Features to be used for Modelling",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "columnsToCategorical",          "value": "[]",          "widget": "variables",          "title": "Columns to Categorical",          "description": "Columns to be Categorical encoded",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "seed",          "value": "-1",          "widget": "textfield",          "title": "Seed",          "description": "Seed for pseudo random number generator (if applicable).",          "datatypes": [            "Long"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "balanceClasses",          "value": "false",          "widget": "textfield",          "title": "Balance Classes",          "description": "Balance training data class counts via over/under-sampling (for imbalanced data).",          "datatypes": [            "boolean"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "nfolds",          "value": "0",          "widget": "textfield",          "title": "Number of Folds",          "description": "Number of folds for K-fold cross-validation (0 to disable or >= 2).",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "ntrees",          "value": "50",          "widget": "textfield",          "title": "Number of Trees",          "description": "Number of trees.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxDepth",          "value": "5",          "widget": "textfield",          "title": "Max Depth",          "description": "Maximum tree depth (0 for unlimited).",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "minRows",          "value": "10.0",          "widget": "textfield",          "title": "Min Rows",          "description": "Fewest allowed (weighted) observations in a leaf.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "nbins",          "value": "20",          "widget": "textfield",          "title": "Number of Bins",          "description": "For numerical columns (real/int), build a histogram of (at least) this many bins, then split at the best point.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "nbinsTopLevel",          "value": "1024",          "widget": "textfield",          "title": "Number of bins top level",          "description": "For numerical columns (real/int), build a histogram of (at most) this many bins at the root level, then decrease by factor of two per level.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "nbinsCats",          "value": "1024",          "widget": "textfield",          "title": "Number of Bins Categoricals",          "description": "For categorical columns (factors), build a histogram of this many bins, then split at the best point. Higher values can lead to more overfitting.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "categoricalEncoding",          "value": "AUTO",          "widget": "array",          "title": "Categorical Encoding",          "description": "Specify one of the various encoding schemes for handling categorical features",          "datatypes": [            "string"          ],          "optionsArray": [            "AUTO",            "OneHotInternal",            "OneHotExplicit",            "Enum",            " Binary",            "Eigen",            "LabelEncode",            "SortByResponse",            "EnumLimited"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "ignoreConstCols",          "value": "true",          "widget": "array",          "title": "Ignore Const Columns",          "description": "Ignore constant columns.",          "datatypes": [            "boolean"          ],          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "scoreEachIteration",          "value": "false",          "widget": "array",          "title": "Score Each Iteration",          "description": "Whether to score during each iteration of model training.",          "datatypes": [            "boolean"          ],          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "stoppingRounds",          "value": "0",          "widget": "textfield",          "title": "Stopping Rounds",          "description": "Early stopping based on convergence of stopping_metric. Stop if simple moving average of length k of the stopping_metric does not improve for k:=stopping_rounds scoring events (0 to disable).",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxRuntimeSecs",          "value": "0.0",          "widget": "textfield",          "title": "Max Runtime Secs",          "description": "his argument specifies the maximum time that the AutoML process will run for. If both max_runtime_secs and max_models are specified, then the AutoML run will stop as soon as it hits either of these limits. If neither max_runtime_secs nor max_models are specified, then max_runtime_secs defaults to 3600 seconds (1 hour).",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "stoppingMetric",          "value": "AUTO",          "widget": "array",          "title": "StoppingMetric",          "description": "Metric to use for early stopping (AUTO: logloss for classification, deviance for regression)",          "optionsArray": [            "AUTO",            "deviance",            "logloss",            "MSE",            "RMSE",            "MAE",            "RMSLE",            "AUC",            "AUCPR",            "lift_top_group",            "misclassification",            "mean_per_class_error",            "anomaly_score",            "custom",            "custom_increasing"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "stoppingTolerance",          "value": "0.001",          "widget": "textfield",          "title": "StoppingTolerance",          "description": "Relative tolerance for metric-based stopping criterion (stop if relative improvement is not at least this much)",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "gainsliftBins",          "value": "-1",          "widget": "textfield",          "title": "Gains Lift Bins",          "description": "Gains/Lift table number of bins. 0 means disabled.. Default value -1 means automatic binning.",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "withContributions",          "value": "false",          "widget": "array",          "title": "With Contributions",          "description": "Enables or disables generating a sub-column of detailedPredictionCol containing Shapley values.",          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "learnRate",          "value": "0.1",          "widget": "textfield",          "title": "Learn Rate",          "description": "Learning rate (from 0.0 to 1.0).",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "advanced",          "value": "",          "widget": "tab",          "title": "Advanced",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "predictionCol",          "value": "prediction",          "widget": "textfield",          "title": "Prediction Column",          "description": "Prediction column name",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "detailedPredictionCol",          "value": "detailed_prediction",          "widget": "textfield",          "title": "Detailed Prediction column",          "description": "Column containing additional prediction details, its content depends on the model type",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "withLeafNodeAssignments",          "value": "false",          "widget": "array",          "title": "With Node Assignments",          "description": "Enables or disables computation of leaf node assignments.",          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "withStageResults",          "value": "false",          "widget": "array",          "title": "With Stage Results",          "description": "Enables or disables computation of stage results.",          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "learnRateAnnealing",          "value": "1.0",          "widget": "textfield",          "title": "Learn Rate Annealing",          "description": "Scale the learning rate by this factor after each tree (e.g., 0.99 or 0.999) .",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "sampleRate",          "value": "1.0",          "widget": "textfield",          "title": "Sample Rate",          "description": "Row sample rate per tree (from 0.0 to 1.0).",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "colSampleRate",          "value": "1.0",          "widget": "textfield",          "title": "Column Sample Rate",          "description": "Column sample rate(from 0.0 to 1.0).",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxAbsLeafnodePred",          "value": "1.7976931348623157e308",          "widget": "textfield",          "title": "Max Absolute Leaf Node Prediction",          "description": "Maximum absolute value of a leaf node prediction.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "predNoiseBandwidth",          "value": "0.0",          "widget": "textfield",          "title": "Prediction Noise Bandwidth",          "description": "Bandwidth (sigma) of Gaussian multiplicative noise ~N(1,sigma) for tree node predictions.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxAfterBalanceSize",          "value": "5.0",          "widget": "textfield",          "title": "Max After Balance Size",          "description": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxConfusionMatrixSize",          "value": "20",          "widget": "textfield",          "title": "Max Depth",          "description": "[Deprecated] Maximum size (# classes) for confusion matrices to be printed in the Logs.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "buildTreeOneNode",          "value": "false",          "widget": "array",          "title": "Build tree one node",          "description": "Enables to run on a single node",          "datatypes": [            "boolean"          ],          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "colSampleRatePerTree",          "value": "1.0",          "widget": "textfield",          "title": "Column Sample Rate Per Tree (from 0.0 to 1.0).",          "description": "Column sample rate per tree (from 0.0 to 1.0).",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "colSampleRateChangePerLevel",          "value": "1.0",          "widget": "textfield",          "title": "Column Sample Rate change Per Level",          "description": "Relative change of the column sampling rate for every level (must be > 0.0 and <= 2.0).",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "scoreTreeInterval",          "value": "0",          "widget": "textfield",          "title": "Score Tree Interval",          "description": "Score the model after every so many trees. Disabled if set to 0.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "minSplitImprovement",          "value": "1.0e-5",          "widget": "textfield",          "title": "Minimum Split Improvement",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "histogramType",          "value": "AUTO",          "widget": "array",          "title": "Histogram Type",          "description": "What type of histogram to use for finding optimal split points. Possible values are ",          "datatypes": [            "string"          ],          "optionsArray": [            "AUTO",            "UniformAdaptive",            "Random",            "QuantilesGlobal",            "RoundRobin",            "UniformRobust"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "calibrateModel",          "value": "false",          "widget": "array",          "title": "Calibrate Model",          "description": "Use Platt Scaling to calculate calibrated class probabilities. Calibration can provide more accurate estimates of class probabilities.",          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "checkConstantResponse",          "value": "true",          "widget": "array",          "title": "Check Constant Response",          "description": "UCheck if response column is constant. If enabled, then an exception is thrown if the response column is a constant value.If disabled, then model will train regardless of the response column being a constant value or not.",          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "keepCrossValidationModels",          "value": "true",          "widget": "array",          "title": "Keep Cross Validation Models",          "description": "Whether to keep the cross-validated models. Keeping cross-validation models may consume significantly more memory in the H2O cluster.",          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "keepCrossValidationPredictions",          "value": "false",          "widget": "array",          "title": "Keep Cross Validation Predictions",          "description": "Whether to keep the predictions of the cross-validation predictions. This needs to be set to TRUE if running the same AutoML object for repeated runs because CV predictions are required to build additional Stacked Ensemble models in AutoML.",          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "keepCrossValidationFoldAssignment",          "value": "false",          "widget": "array",          "title": "Keep Cross Validation Fold Assignment",          "description": "Whether to keep cross-validation assignments.",          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "tweediePower",          "value": "1.5",          "widget": "textfield",          "title": "Tweedie Power",          "description": "Tweedie power for Tweedie regression, must be between 1 and 2.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "quantileAlpha",          "value": "0.5",          "widget": "textfield",          "title": "Quantile Alhpa",          "description": "Desired quantile for Quantile regression, must be between 0 and 1.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "huberAlpha",          "value": "0.9",          "widget": "textfield",          "title": "Huber Alpha",          "description": "Desired quantile for Huber/M-regression (threshold between quadratic and linear loss, must be between 0 and 1).",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "weightCol",          "value": "",          "widget": "variable",          "title": "Weight Column",          "description": "Column with observation weights. Giving some observation a weight of zero is equivalent to excluding it from the dataset; giving an observation a relative weight of 2 is equivalent to repeating that row twice. Negative weights are not allowed. Note: Weights are per-row observation weights and do not increase the size of the data frame. This is typically the number of times a row is repeated, but non-integer values are supported as well. During training, rows with higher weights matter more, due to the larger loss function pre-factor. If you set weight = 0 for a row, the returned prediction frame at that row is zero and this is incorrect. To get an accurate prediction, remove all rows with weight == 0.",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "offsetCol",          "value": "",          "widget": "variable",          "title": "Offset Column",          "description": "Offset column. This will be added to the combination of columns before applying the link function.",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "foldCol",          "value": "",          "widget": "variable",          "title": "Fold Column",          "description": "Column with cross-validation fold index assignment per observation.",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "foldAssignment",          "value": "AUTO",          "widget": "array",          "title": "Fold Assignment",          "description": "Cross-validation fold assignment scheme, if fold_column is not specified. The 'Stratified' option will stratify the folds based on the response variable, for classification problems.",          "datatypes": [            "string"          ],          "optionsArray": [            "AUTO",            "Random",            "Modulo",            "Stratified"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "aucType",          "value": "AUTO",          "widget": "array",          "title": "AUC Type",          "description": "Set default multinomial AUC type.",          "optionsArray": [            "AUTO",            "NONE",            "MACRO_OVR",            "WEIGHTED_OVR",            "MACRO_OVO",            "WEIGHTED_OVO"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "60",      "name": "SQL",      "description": "This node runs the given SQL on the incoming DataFrame",      "details": "This node receives an input data frame, creates a temporary table on top of that data frame.<br>\nAllows the user to write a SQL which would be executed on the temporary table.<br>\nThe resulting data frame of running the SQL is passed on to the next node.<br>",      "examples": "<h2>SQL Examples</h2>\n<br>\nBelow are some example of SQL. <br>\n<br>\nThey use the Temp Table Name to be : tempTable<br>\n<br>\nThe schem of the Input Dataframe is : id, price, lotsize, bedrooms, bathrms, stories, driveway, recroom, fullbase, gashw, airco, garagepl, prefarea<br>\n<br>\n<h4> avg price of house</h4>\n<br>\nselect avg(price) as avg_price from tempTable<br>\n<br>\n<br>\n<h4> bedrooms with avg price greater than 10000</h4>\n<br>\nselect bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000<br>\n<br>\n<br>\n<h4> house details with bedrooms avg price greater than 10000</h4>\n<br>\nselect tempTable.* , inner_table.avg_price from<br>\n(select bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000) as inner_table<br>\nJOIN tempTable ON(inner_table.bedrooms = tempTable.bedrooms)<br>",      "type": "transform",      "nodeClass": "fire.nodes.etl.NodeSQL",      "x": "267.98px",      "y": "243.977px",      "hint": "Whenever the table is changed, go to Schema tab and Refresh the Schema",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "tempTable",          "value": "melt_temp_table",          "widget": "textfield",          "title": "Temp Table",          "description": "Temp Table Name to be used",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "sql",          "value": "select * FROM melt_temp_table LIMIT 1000",          "widget": "textarea_large",          "type": "sql",          "title": "SQL",          "description": "SQL to be run",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "schema",          "value": "",          "widget": "tab",          "title": "Schema",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColNames",          "value": "[\"c0\",\"id\",\"itemid\",\"deptid\",\"catid\",\"stateid\",\"d\",\"sales\"]",          "widget": "schema_col_names",          "title": "Output Column Names",          "description": "Name of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColTypes",          "value": "[\"INTEGER\",\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"STRING\",\"INTEGER\"]",          "widget": "schema_col_types",          "title": "Output Column Types",          "description": "Data Type of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColFormats",          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",          "widget": "schema_col_formats",          "title": "Output Column Formats",          "description": "Format of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "61",      "name": "SQL",      "description": "This node runs the given SQL on the incoming DataFrame",      "details": "This node receives an input data frame, creates a temporary table on top of that data frame.<br>\nAllows the user to write a SQL which would be executed on the temporary table.<br>\nThe resulting data frame of running the SQL is passed on to the next node.<br>",      "examples": "<h2>SQL Examples</h2>\n<br>\nBelow are some example of SQL. <br>\n<br>\nThey use the Temp Table Name to be : tempTable<br>\n<br>\nThe schem of the Input Dataframe is : id, price, lotsize, bedrooms, bathrms, stories, driveway, recroom, fullbase, gashw, airco, garagepl, prefarea<br>\n<br>\n<h4> avg price of house</h4>\n<br>\nselect avg(price) as avg_price from tempTable<br>\n<br>\n<br>\n<h4> bedrooms with avg price greater than 10000</h4>\n<br>\nselect bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000<br>\n<br>\n<br>\n<h4> house details with bedrooms avg price greater than 10000</h4>\n<br>\nselect tempTable.* , inner_table.avg_price from<br>\n(select bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000) as inner_table<br>\nJOIN tempTable ON(inner_table.bedrooms = tempTable.bedrooms)<br>",      "type": "transform",      "nodeClass": "fire.nodes.etl.NodeSQL",      "x": "269.988px",      "y": "345.984px",      "hint": "Whenever the table is changed, go to Schema tab and Refresh the Schema",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "tempTable",          "value": "cal_temp_table",          "widget": "textfield",          "title": "Temp Table",          "description": "Temp Table Name to be used",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "sql",          "value": "select * FROM cal_temp_table LIMIT 1000",          "widget": "textarea_large",          "type": "sql",          "title": "SQL",          "description": "SQL to be run",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "schema",          "value": "",          "widget": "tab",          "title": "Schema",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColNames",          "value": "[\"date\",\"wmyrwk\",\"weekday\",\"wday\",\"month\",\"year\",\"eventname1\",\"eventtype1\",\"eventname2\",\"eventtype2\",\"snapCA\",\"snapTX\",\"snapWI\"]",          "widget": "schema_col_names",          "title": "Output Column Names",          "description": "Name of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColTypes",          "value": "[\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\"]",          "widget": "schema_col_types",          "title": "Output Column Types",          "description": "Data Type of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColFormats",          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",          "widget": "schema_col_formats",          "title": "Output Column Formats",          "description": "Format of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "62",      "name": "SQL",      "description": "This node runs the given SQL on the incoming DataFrame",      "details": "This node receives an input data frame, creates a temporary table on top of that data frame.<br>\nAllows the user to write a SQL which would be executed on the temporary table.<br>\nThe resulting data frame of running the SQL is passed on to the next node.<br>",      "examples": "<h2>SQL Examples</h2>\n<br>\nBelow are some example of SQL. <br>\n<br>\nThey use the Temp Table Name to be : tempTable<br>\n<br>\nThe schem of the Input Dataframe is : id, price, lotsize, bedrooms, bathrms, stories, driveway, recroom, fullbase, gashw, airco, garagepl, prefarea<br>\n<br>\n<h4> avg price of house</h4>\n<br>\nselect avg(price) as avg_price from tempTable<br>\n<br>\n<br>\n<h4> bedrooms with avg price greater than 10000</h4>\n<br>\nselect bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000<br>\n<br>\n<br>\n<h4> house details with bedrooms avg price greater than 10000</h4>\n<br>\nselect tempTable.* , inner_table.avg_price from<br>\n(select bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000) as inner_table<br>\nJOIN tempTable ON(inner_table.bedrooms = tempTable.bedrooms)<br>",      "type": "transform",      "nodeClass": "fire.nodes.etl.NodeSQL",      "x": "278.988px",      "y": "449.988px",      "hint": "Whenever the table is changed, go to Schema tab and Refresh the Schema",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "tempTable",          "value": "sell_temp_table",          "widget": "textfield",          "title": "Temp Table",          "description": "Temp Table Name to be used",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "sql",          "value": "select * FROM sell_temp_table LIMIT 1000",          "widget": "textarea_large",          "type": "sql",          "title": "SQL",          "description": "SQL to be run",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "schema",          "value": "",          "widget": "tab",          "title": "Schema",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColNames",          "value": "[\"storeid\",\"itemid\",\"wmyrwk\",\"sellprice\"]",          "widget": "schema_col_names",          "title": "Output Column Names",          "description": "Name of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColTypes",          "value": "[\"INTEGER\",\"INTEGER\",\"INTEGER\",\"DOUBLE\"]",          "widget": "schema_col_types",          "title": "Output Column Types",          "description": "Data Type of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColFormats",          "value": "[\"\",\"\",\"\",\"\"]",          "widget": "schema_col_formats",          "title": "Output Column Formats",          "description": "Format of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "63",      "name": "Sticky Note",      "description": "Allows capturing Notes on the Workflow",      "details": "",      "examples": "",      "type": "sticky",      "nodeClass": "fire.nodes.doc.NodeStickyNote",      "x": "104px",      "y": "13px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "bgColor",          "value": "gray",          "widget": "textfield",          "title": "Bg Color",          "description": "Background of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "width",          "value": "587.007812px",          "widget": "textfield",          "title": "Width",          "description": "Width of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "height",          "value": "174.007812px",          "widget": "textfield",          "title": "Height",          "description": "Height of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "comment",          "value": "<p><strong>M5 Forecast</strong></p><p><br></p><p><strong>Kaggle competition</strong> - https://www.kaggle.com/competitions/m5-forecasting-accuracy/data</p><p><br></p><p><strong>Focus:</strong> <span style=\"color: rgba(0, 0, 0, 0.7);\">predicting item sales at stores in various locations</span></p><p><br></p><p><strong style=\"color: rgba(0, 0, 0, 0.7);\">Data: </strong><u style=\"color: rgba(0, 0, 0, 0.7);\">calendar.csv</u><strong style=\"color: rgba(0, 0, 0, 0.7);\"> - </strong><span style=\"color: rgba(0, 0, 0, 0.7);\">contains information about the dates on which the products are sold</span></p><p><u style=\"color: rgba(0, 0, 0, 0.7);\">sell_prices.csv</u><span style=\"color: rgba(0, 0, 0, 0.7);\"> - contains information about the price of the products sold per store and date</span></p><p><u style=\"color: rgba(0, 0, 0, 0.7);\">meltedSales_valid.csv</u><span style=\"color: rgba(0, 0, 0, 0.7);\"> - contains the historical daily unit sales data per product and store&nbsp;</span></p>",          "widget": "textarea_rich",          "title": "Comment",          "description": "Comments for the Workflow",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    }  ],  "edges": [    {      "source": "8",      "target": "50",      "id": 1    },    {      "source": "50",      "target": "51",      "id": 2    },    {      "source": "53",      "target": "56",      "id": 3    },    {      "source": "59",      "target": "53",      "id": 4    },    {      "source": "3",      "target": "62",      "id": 5    },    {      "source": "62",      "target": "8",      "id": 6    },    {      "source": "48",      "target": "61",      "id": 7    },    {      "source": "61",      "target": "8",      "id": 8    },    {      "source": "41",      "target": "60",      "id": 9    },    {      "source": "60",      "target": "50",      "id": 10    },    {      "source": "51",      "target": "59",      "id": 11    },    {      "source": "51",      "target": "53",      "id": 12    }  ],  "dataSetDetails": [],  "engine": "scala"}