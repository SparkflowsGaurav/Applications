{  "name": "Click-thru Prediction",  "uuid": "af9bb76d-df6b-473f-a00e-6f9b2d294a52",  "category": "Classification",  "description": "Performs Click-thru Predictions",  "parameters": "-",  "nodes": [    {      "id": "1",      "name": "DatasetStructured",      "description": "This Node creates a DataFrame by reading data from HDFS, HIVE etc. The dataset has been defined earlier in Fire by using the Dataset Feature. As a user, you just have to select the Dataset of your interest.",      "details": "This Node creates a DataFrame by reading data from HDFS, HIVE etc.<br>\n<br>\nThe data has been defined earlier in Fire by using the Dataset Feature. As a user, you just have to select the Dataset of your interest.<br>",      "examples": "",      "type": "dataset",      "nodeClass": "fire.nodes.dataset.NodeDatasetStructured",      "x": "67.9688px",      "y": "141.953px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "dataset",          "value": "9eaba27f-4f45-4a2f-81de-b285efb0dafe",          "widget": "dataset",          "title": "Dataset",          "description": "Selected Dataset",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "2",      "name": "ConcatColumns",      "description": "This node creates a new DataFrame by concatenating the specified columns of the input DataFrame",      "details": "",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.etl.NodeConcatColumns",      "x": "69.9531px",      "y": "369.969px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "inputCols",          "value": "[\"site_id\",\"app_id\"]",          "widget": "variables",          "title": "Columns",          "description": "Columns to be concatenated",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputCol",          "value": "site_app_id",          "widget": "textfield",          "title": "Concatenated Column Name",          "description": "Column name for the concatenated columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "sep",          "value": "|",          "widget": "textfield",          "title": "Separator",          "description": "Separator to be used when concatenating the columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "3",      "name": "PrintNRows",      "description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",      "details": "",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",      "x": "305.969px",      "y": "369.969px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "title",          "value": "Row Values",          "widget": "textfield",          "title": "Title",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "n",          "value": "3",          "widget": "textfield",          "title": "Num Rows to Print",          "description": "number of rows to be printed",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "4",      "name": "StringIndexer",      "description": "StringIndexer encodes a string column of labels to a column of label indices",      "details": "",      "examples": "",      "type": "ml-transformer",      "nodeClass": "fire.nodes.ml.NodeStringIndexer",      "x": "295.953px",      "y": "142.938px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "handleInvalid",          "value": "error",          "widget": "array",          "title": "Handle Invalid",          "description": "Invalid entries to be skipped or thrown error",          "optionsMap": {            "skip": "skip",            "error": "error"          },          "optionsArray": [            "skip",            "error"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "inputCols",          "value": "[\"site_app_id\"]",          "widget": "variables_list_select",          "title": "Input Columns",          "description": "Input columns for encoding",          "datatypes": [            "string"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputCols",          "value": "[\"site_app_id_index\"]",          "widget": "variables_list_textfield",          "title": "Output Columns",          "description": "Output columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "5",      "name": "OneHotEncoder",      "description": "Maps a column of label indices to a column of binary vectors, with at most a single one-value",      "details": "",      "examples": "",      "type": "ml-transformer",      "nodeClass": "fire.nodes.ml.NodeOneHotEncoder",      "x": "553.938px",      "y": "142.922px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "inputCols",          "value": "[\"site_app_id_index\"]",          "widget": "variables_list_select",          "title": "Input Columns",          "description": "Input columns for encoding",          "datatypes": [            "integer",            "long",            "double",            "float"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputCols",          "value": "[\"site_app_id_nohe\"]",          "widget": "variables_list_textfield",          "title": "Output Columns",          "description": "Output columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "7",      "name": "VectorAssembler",      "description": "Merges multiple columns into a vector column",      "details": "",      "examples": "",      "type": "ml-transformer",      "nodeClass": "fire.nodes.ml.NodeVectorAssembler",      "x": "565.941px",      "y": "347.93px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "inputCols",          "value": "[\"hour\",\"C1\",\"banner_pos\",\"device_type\",\"device_conn_type\",\"col16\",\"col17\",\"col18\",\"col19\",\"col20\",\"col21\",\"col22\",\"col23\",\"site_app_id_nohe\"]",          "widget": "variables",          "title": "Input Columns",          "description": "Input column of type - all numeric, boolean and vector",          "datatypes": [            "integer",            "long",            "double",            "float",            "vectorudt"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputCol",          "value": "features",          "widget": "textfield",          "title": "Output Column",          "description": "Output column name",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "8",      "name": "VectorIndexer",      "description": "Vector Indexer indexes categorical features inside of a Vector. It decides which features are categorical and converts them to category indices. The decision is based on the number of distinct values of a feature.",      "details": "",      "examples": "",      "type": "ml-transformer",      "nodeClass": "fire.nodes.ml.NodeVectorIndexer",      "x": "811.938px",      "y": "345.922px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "inputCol",          "value": "features",          "widget": "variable",          "title": "Input Column",          "description": "The Input column name",          "datatypes": [            "vectorudt"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputCol",          "value": "features_index_vec",          "widget": "textfield",          "title": "Output Column",          "description": "Output column name",          "datatypes": [            "vectorudt"          ],          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxCategories",          "value": "10",          "widget": "textfield",          "title": "Maximum Categories",          "description": "Threshold for the number of values a categorical feature can take. If a feature is found to have > maxCategories values, then it is declared continuous. Must be >= 2",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "9",      "name": "Split",      "description": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows and the other containing the remaining 30%.",      "details": "",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.ml.NodeSplit",      "x": "804.98px",      "y": "135.957px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "fraction1",          "value": ".8",          "widget": "textfield",          "title": "Fraction 1",          "description": "Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "10",      "name": "GBTClassifier",      "description": "Gradient-Boosted Trees (GBTs) is a learning algorithm for classification. It supports binary labels, as well as both continuous and categorical features. Note: Multiclass labels are not currently supported.",      "details": "",      "examples": "",      "type": "ml-estimator",      "nodeClass": "fire.nodes.ml.NodeGBTClassifier",      "x": "1072.95px",      "y": "28.9648px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "featuresCol",          "value": "features_index_vec",          "widget": "variable",          "title": "Features Column",          "description": "Features column of type vectorUDT for model fitting",          "datatypes": [            "vectorudt"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "labelCol",          "value": "click",          "widget": "variable",          "title": "Label Column",          "description": "The label column for model fitting",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "predictionCol",          "widget": "textfield",          "title": "Prediction Column",          "description": "The prediction column created during model scoring.",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "impurity",          "value": "gini",          "widget": "array",          "title": "Impurity",          "description": "The Criterion used for information gain calculation",          "optionsArray": [            "gini",            "entropy"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "lossType",          "value": "logistic",          "widget": "array",          "title": "Loss Function",          "description": "The Loss function which GBT tries to minimize",          "optionsArray": [            "logistic"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxBins",          "value": "32",          "widget": "textfield",          "title": "Max Bins",          "description": "The maximum number of bins used for discretizing continuous features.Must be >= 2 and >= number of categories in any categorical feature.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxDepth",          "value": "5",          "widget": "textfield",          "title": "Max Depth",          "description": "The Maximum depth of a tree",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxIter",          "value": "20",          "widget": "textfield",          "title": "Max Iterations",          "description": "The maximum number of iterations(>=0)(a.k.a numtrees)",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "minInfoGain",          "value": "",          "widget": "textfield",          "title": "Min Information Gain",          "description": "The Minimum information gain for a split to be considered at a tree node",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "minInstancesPerNode",          "value": "1",          "widget": "textfield",          "title": "Min Instances Per Node",          "description": "The Minimum number of instances each child must have after split",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "subsamplingRate",          "value": "1.0",          "widget": "textfield",          "title": "Subsampling Rate",          "description": "The fraction of the training data used for learning each decision tree.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "seed",          "value": "-1",          "widget": "textfield",          "title": "Seed",          "description": "The random seed",          "datatypes": [            "long"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "stepSize",          "value": "0.1",          "widget": "textfield",          "title": "Step Size",          "description": "Step size (a.k.a. learning rate), The step size to be used for each iteration of optimization.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "cacheNodeIds",          "value": "false",          "widget": "array",          "title": "Cache Node Ids",          "description": "The caching nodes IDs. Can speed up training of deeper trees.",          "datatypes": [            "boolean"          ],          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "checkpointInterval",          "value": "10",          "widget": "textfield",          "title": "Checkpoint Interval",          "description": "The checkpoint interval. E.g. 10 means that the cache will get checkpointed every 10 iterations.Set checkpoint interval (>= 1) or disable checkpoint (-1)",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxMemoryInMB",          "value": "256",          "widget": "textfield",          "title": "Max memory",          "description": "Maximum memory in MB allocated to histogram aggregation.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "gridSearch",          "value": "",          "widget": "tab",          "title": "Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "minInfoGainGrid",          "value": "",          "widget": "textfield",          "title": "Min Information Gain Param Grid Search",          "description": "Min Information Gain Parameters for Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxBinsGrid",          "value": "",          "widget": "textfield",          "title": "Max Bins Param Grid Search",          "description": "Max Bins Parameters for Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxDepthGrid",          "value": "",          "widget": "textfield",          "title": "Max Depth Param Grid Search",          "description": "Max Depth Parameters for Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxIterGrid",          "value": "",          "widget": "textfield",          "title": "Max Iteration Param Grid Search",          "description": "Max Iteration Parameters for Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "11",      "name": "Predict",      "description": "Predict node takes in a DataFrame and Model and makes predictions",      "details": "",      "examples": "",      "type": "ml-predict",      "nodeClass": "fire.nodes.ml.NodePredict",      "x": "1078.94px",      "y": "222.938px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "12",      "name": "MulticlassClassificationEvaluator",      "description": "Evaluator for multiclass classification, which expects two input columns: score and label.",      "details": "Evaluator for multiclass classification, which expects two input columns: score and label.<br>\n<br>\nMore at Spark MLlib/ML docs page :<a href=\"https://spark.apache.org/docs/1.6.0/mllib-evaluation-metrics.html#multiclass-classification\" target=\"_blank\">spark.apache.org/docs/1.6.0/mllib-evaluation-metrics.html#multiclass-classification</a><br>",      "examples": "",      "type": "ml-evaluator",      "nodeClass": "fire.nodes.ml.NodeMulticlassClassificationEvaluator",      "x": "1084.95px",      "y": "431.953px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "labelCol",          "value": "click",          "widget": "variable",          "title": "Label Column",          "description": "The label column for model fitting.",          "datatypes": [            "double"          ],          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "predictionCol",          "value": "prediction",          "widget": "variable",          "title": "Prediction Column",          "description": "The prediction column.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "metricName",          "value": "f1",          "widget": "array",          "title": "Metric Name",          "description": "The metric used in evaluation.",          "optionsArray": [            "f1",            "accuracy",            "weightedPrecision",            "weightedRecall"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "13",      "name": "Notes",      "description": "Allows capturing Notes on the Workflow",      "details": "",      "examples": "",      "type": "doc",      "nodeClass": "fire.nodes.doc.NodeDocLarge",      "x": "420.98px",      "y": "21.6484px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "comment",          "value": "<p><br></p><h1>Click-Thu Rate Prediction</h1><p><br></p><p>https://www.kaggle.com/c/avazu-ctr-prediction</p><p><br></p><p><br></p><h2>Goal</h2><p><br></p><p>Create a model for predicting clicks on banner ads.</p><p><br></p><h2>Solution</h2><p><br></p><p>This workflow uses GBTClassifier. It creates a label column to determine if the click happened.</p><p><br></p><p>It collects the features using a VectorAssembler.</p>",          "widget": "textarea_rich",          "title": "Comment",          "description": "Comments for the Workflow",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    }  ],  "edges": [    {      "source": "1",      "target": "2",      "id": 1    },    {      "source": "2",      "target": "3",      "id": 2    },    {      "source": "3",      "target": "4",      "id": 3    },    {      "source": "4",      "target": "5",      "id": 4    },    {      "source": "7",      "target": "8",      "id": 5    },    {      "source": "8",      "target": "9",      "id": 6    },    {      "source": "9",      "target": "10",      "id": 7    },    {      "source": "10",      "target": "11",      "id": 8    },    {      "source": "9",      "target": "11",      "id": 9    },    {      "source": "11",      "target": "12",      "id": 10    },    {      "source": "5",      "target": "7",      "id": 11    }  ],  "dataSetDetails": [    {      "id": 117,      "uuid": "9eaba27f-4f45-4a2f-81de-b285efb0dafe",      "header": false,      "path": "data/ctr_avazu_dataset/train_sample.csv",      "delimiter": ",",      "datasetType": "CSV",      "datasetSchema": "{\"colNames\":[\"id\",\"click\",\"hour\",\"C1\",\"banner_pos\",\"site_id\",\"site_domain\",\"site_category\",\"app_id\",\"app_domain\",\"app_category\",\"device_id\",\"device_ip\",\"device_model\",\"device_type\",\"device_conn_type\",\"col16\",\"col17\",\"col18\",\"col19\",\"col20\",\"col21\",\"col22\",\"col23\"],\"colTypes\":[\"STRING\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\"],\"colFormats\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"colMLTypes\":[\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"TEXT\",\"TEXT\",\"TEXT\",\"TEXT\",\"TEXT\",\"TEXT\",\"TEXT\",\"TEXT\",\"TEXT\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\"]}"    }  ],  "engine": "scala"}