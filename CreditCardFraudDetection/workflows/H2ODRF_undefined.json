{	"name": "H2O DRF",	"uuid": "081e9065-0af9-4d2b-941a-a5e4b8a0dfce",	"category": "H2O",	"description": "-",	"parameters": "-",	"nodes": [		{			"id": "3",			"name": "PrintNRows",			"description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",			"details": "This node is used to print incoming dataset.<br>\n<br>\nNumber of rows that needs to be printed can be configured in the node.<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.util.NodePrintFirstNRows",			"x": "830.727px",			"y": "260.449px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "Row Values",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "n",					"value": "10",					"widget": "textfield",					"title": "Num Rows to Print",					"description": "number of rows to be printed",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "displayDataType",					"value": "true",					"widget": "array",					"title": "Display Data Type",					"description": "If true display rows DataType",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "4",			"name": "NodeH2OScore",			"description": "Scores the data using the H2O model",			"details": "",			"examples": "",			"type": "ml-predict",			"nodeClass": "fire.nodes.h2o.NodeH2OScore",			"x": "553.961px",			"y": "260.715px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "5",			"name": "Split",			"description": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).",			"details": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data.<br>\n<br>\nFor example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).<br>\n<br>\nThe split node can be used for splitting the DataFrame for training and test datasets used in Machine Learning.<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.ml.NodeSplit",			"x": "330.211px",			"y": "127.961px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "fraction1",					"value": ".8",					"widget": "textfield",					"title": "Fraction 1",					"description": "Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "6",			"name": "H2ODRF",			"description": "Distributed Random Forest (DRF) is a powerful classification and regression tool. DRF generates a forest of classification or regression trees.",			"details": "Distributed Random Forest (DRF) is a powerful classification and regression tool. When given a set of data, DRF generates a forest of classification or regression trees, rather than a single classification or regression tree. Each of these trees is a weak learner built on a subset of rows and columns. More trees will reduce the variance. Both classification and regression take the average prediction over all of their trees to make a final prediction, whether predicting for a class or numeric value.<br>\n<br>\nMore details are available at : <a href=\"http://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/drf.html\" target=\"_blank\">docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/drf.html</a><br>",			"examples": "",			"type": "ml-estimator",			"nodeClass": "fire.nodes.h2o.NodeH2ODrf",			"x": "539.738px",			"y": "52.4922px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "isResponseIsCategorical",					"value": "false",					"widget": "array",					"title": "isResponseColIsCategorical",					"description": "Specify a response column type(numeric or categorical). Separates the Classification and Regression",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "labelCol",					"value": "season",					"widget": "variable",					"title": "Label Column",					"description": "Response variable column.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "featuresCols",					"value": "[\"workingday\",\"weather\",\"temp\",\"atemp\",\"humidity\",\"windspeed\",\"casual\"]",					"widget": "variables",					"title": "Feature Columns",					"description": "Features to be used for Modelling",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "columnsToCategorical",					"value": "[]",					"widget": "variables",					"title": "Columns to Categorical",					"description": "Columns to be Categorical encoded",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "seed",					"value": "-1",					"widget": "textfield",					"title": "Seed",					"description": "Seed for pseudo random number generator (if applicable).",					"datatypes": [						"Long"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "balanceClasses",					"value": "false",					"widget": "textfield",					"title": "Balance Classes",					"description": "Balance training data class counts via over/under-sampling (for imbalanced data).",					"datatypes": [						"boolean"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "nfolds",					"value": "0",					"widget": "textfield",					"title": "Number of Folds",					"description": "Number of folds for K-fold cross-validation (0 to disable or >= 2).",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "ntrees",					"value": "50",					"widget": "textfield",					"title": "Number of Trees",					"description": "Number of trees.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxDepth",					"value": "5",					"widget": "textfield",					"title": "Max Depth",					"description": "Maximum tree depth (0 for unlimited).",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "minRows",					"value": "10.0",					"widget": "textfield",					"title": "Min Rows",					"description": "Fewest allowed (weighted) observations in a leaf.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "nbins",					"value": "20",					"widget": "textfield",					"title": "Number of Bins",					"description": "For numerical columns (real/int), build a histogram of (at least) this many bins, then split at the best point.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "nbinsTopLevel",					"value": "1024",					"widget": "textfield",					"title": "Number of bins top level",					"description": "For numerical columns (real/int), build a histogram of (at most) this many bins at the root level, then decrease by factor of two per level.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "nbinsCats",					"value": "1024",					"widget": "textfield",					"title": "Number of Bins Categoricals",					"description": "For categorical columns (factors), build a histogram of this many bins, then split at the best point. Higher values can lead to more overfitting.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "categoricalEncoding",					"value": "AUTO",					"widget": "array",					"title": "Categorical Encoding",					"description": "Specify one of the various encoding schemes for handling categorical features",					"datatypes": [						"string"					],					"optionsArray": [						"AUTO",						"OneHotInternal",						"OneHotExplicit",						"Enum",						" Binary",						"Eigen",						"LabelEncode",						"SortByResponse",						"EnumLimited"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "ignoreConstCols",					"value": "true",					"widget": "array",					"title": "Ignore Const Columns",					"description": "Ignore constant columns.",					"datatypes": [						"boolean"					],					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "scoreEachIteration",					"value": "false",					"widget": "array",					"title": "Score Each Iteration",					"description": "Whether to score during each iteration of model training.",					"datatypes": [						"boolean"					],					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "stoppingRounds",					"value": "0",					"widget": "textfield",					"title": "Stopping Rounds",					"description": "Early stopping based on convergence of stopping_metric. Stop if simple moving average of length k of the stopping_metric does not improve for k:=stopping_rounds scoring events (0 to disable).",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxRuntimeSecs",					"value": "0.0",					"widget": "textfield",					"title": "Max Runtime Secs",					"description": "his argument specifies the maximum time that the AutoML process will run for. If both max_runtime_secs and max_models are specified, then the AutoML run will stop as soon as it hits either of these limits. If neither max_runtime_secs nor max_models are specified, then max_runtime_secs defaults to 3600 seconds (1 hour).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "stoppingMetric",					"value": "AUTO",					"widget": "array",					"title": "StoppingMetric",					"description": "Metric to use for early stopping (AUTO: logloss for classification, deviance for regression)",					"optionsArray": [						"AUTO",						"deviance",						"logloss",						"MSE",						"RMSE",						"MAE",						"RMSLE",						"AUC",						"AUCPR",						"lift_top_group",						"misclassification",						"mean_per_class_error",						"anomaly_score",						"custom",						"custom_increasing"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "stoppingTolerance",					"value": "0.001",					"widget": "textfield",					"title": "StoppingTolerance",					"description": "Relative tolerance for metric-based stopping criterion (stop if relative improvement is not at least this much)",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "gainsliftBins",					"value": "-1",					"widget": "textfield",					"title": "Gains Lift Bins",					"description": "Gains/Lift table number of bins. 0 means disabled.. Default value -1 means automatic binning.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "withContributions",					"value": "false",					"widget": "array",					"title": "With Contributions",					"description": "Enables or disables generating a sub-column of detailedPredictionCol containing Shapley values.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "advanced",					"value": "",					"widget": "tab",					"title": "Advanced",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "predictionCol",					"value": "prediction",					"widget": "textfield",					"title": "Prediction Column",					"description": "Prediction column name",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "detailedPredictionCol",					"value": "detailed_prediction",					"widget": "textfield",					"title": "Detailed Prediction column",					"description": "Column containing additional prediction details, its content depends on the model type",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "withLeafNodeAssignments",					"value": "false",					"widget": "array",					"title": "With Node Assignments",					"description": "Enables or disables computation of leaf node assignments.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "withStageResults",					"value": "false",					"widget": "array",					"title": "With Stage Results",					"description": "Enables or disables computation of stage results.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "mtries",					"value": "-1",					"widget": "textfield",					"title": "mtries",					"description": "Number of variables randomly sampled as candidates at each split. If set to -1, defaults to sqrt{p} for classification and p/3 for regression (where p is the # of predictors.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "binomialDoubleTrees",					"value": "false",					"widget": "array",					"title": "Binomial Double trees",					"description": "For binary classification: Build 2x as many trees (one per class) - can lead to higher accuracy.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "sampleRate",					"value": "0.632",					"widget": "textfield",					"title": "Sample Rate",					"description": "Row sample rate per tree (from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxAfterBalanceSize",					"value": "5.0",					"widget": "textfield",					"title": "Max After Balance Size",					"description": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxConfusionMatrixSize",					"value": "20",					"widget": "textfield",					"title": "Max Depth",					"description": "[Deprecated] Maximum size (# classes) for confusion matrices to be printed in the Logs.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "buildTreeOneNode",					"value": "false",					"widget": "array",					"title": "Build tree one node",					"description": "Enables to run on a single node",					"datatypes": [						"boolean"					],					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "colSampleRatePerTree",					"value": "1.0",					"widget": "textfield",					"title": "Column Sample Rate Per Tree (from 0.0 to 1.0).",					"description": "Column sample rate per tree (from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "colSampleRateChangePerLevel",					"value": "1.0",					"widget": "textfield",					"title": "Column Sample Rate change Per Level",					"description": "Relative change of the column sampling rate for every level (must be > 0.0 and <= 2.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "scoreTreeInterval",					"value": "0",					"widget": "textfield",					"title": "Score Tree Interval",					"description": "Score the model after every so many trees. Disabled if set to 0.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "minSplitImprovement",					"value": "1.0e-5",					"widget": "textfield",					"title": "Minimum Split Improvement",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "histogramType",					"value": "AUTO",					"widget": "array",					"title": "Histogram Type",					"description": "What type of histogram to use for finding optimal split points. Possible values are ",					"datatypes": [						"string"					],					"optionsArray": [						"AUTO",						"UniformAdaptive",						"Random",						"QuantilesGlobal",						"RoundRobin",						"UniformRobust"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "calibrateModel",					"value": "false",					"widget": "array",					"title": "Calibrate Model",					"description": "Use Platt Scaling to calculate calibrated class probabilities. Calibration can provide more accurate estimates of class probabilities.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "checkConstantResponse",					"value": "true",					"widget": "array",					"title": "Check Constant Response",					"description": "UCheck if response column is constant. If enabled, then an exception is thrown if the response column is a constant value.If disabled, then model will train regardless of the response column being a constant value or not.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "keepCrossValidationModels",					"value": "true",					"widget": "array",					"title": "Keep Cross Validation Models",					"description": "Whether to keep the cross-validated models. Keeping cross-validation models may consume significantly more memory in the H2O cluster.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "keepCrossValidationPredictions",					"value": "false",					"widget": "array",					"title": "Keep Cross Validation Predictions",					"description": "Whether to keep the predictions of the cross-validation predictions. This needs to be set to TRUE if running the same AutoML object for repeated runs because CV predictions are required to build additional Stacked Ensemble models in AutoML.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "keepCrossValidationFoldAssignment",					"value": "false",					"widget": "array",					"title": "Keep Cross Validation Fold Assignment",					"description": "Whether to keep cross-validation assignments.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "distribution",					"value": "AUTO",					"widget": "array",					"title": "Distribution",					"description": "Distribution function used by algorithms that support it; other algorithms use their defaults.",					"optionsArray": [						"AUTO",						"bernoulli",						"quasibinomial",						"modified_huber",						"multinomial",						"ordinal",						"gaussian",						"poisson",						"gamma",						"tweedie",						"huber",						"laplace",						"quantile",						"fractionalbinomial",						"negativebinomial",						"custom"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "weightCol",					"value": "",					"widget": "variable",					"title": "Weight Column",					"description": "Column with observation weights. Giving some observation a weight of zero is equivalent to excluding it from the dataset; giving an observation a relative weight of 2 is equivalent to repeating that row twice. Negative weights are not allowed. Note: Weights are per-row observation weights and do not increase the size of the data frame. This is typically the number of times a row is repeated, but non-integer values are supported as well. During training, rows with higher weights matter more, due to the larger loss function pre-factor. If you set weight = 0 for a row, the returned prediction frame at that row is zero and this is incorrect. To get an accurate prediction, remove all rows with weight == 0.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "offsetCol",					"value": "",					"widget": "variable",					"title": "Offset Column",					"description": "Offset column. This will be added to the combination of columns before applying the link function.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "foldCol",					"value": "",					"widget": "variable",					"title": "Fold Column",					"description": "Column with cross-validation fold index assignment per observation.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "foldAssignment",					"value": "AUTO",					"widget": "array",					"title": "Fold Assignment",					"description": "Cross-validation fold assignment scheme, if fold_column is not specified. The 'Stratified' option will stratify the folds based on the response variable, for classification problems.",					"datatypes": [						"string"					],					"optionsArray": [						"AUTO",						"Random",						"Modulo",						"Stratified"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "aucType",					"value": "AUTO",					"widget": "array",					"title": "AUC Type",					"description": "Set default multinomial AUC type.",					"optionsArray": [						"AUTO",						"NONE",						"MACRO_OVR",						"WEIGHTED_OVR",						"MACRO_OVO",						"WEIGHTED_OVO"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "10",			"name": "Sticky Note",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "246.988px",			"y": "345.986px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "blue",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "631.00926px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "64.00926px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<p>This workflow uses H2O DRF for predicting the number of bikes rented</p>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "11",			"name": "Sticky Note",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "61px",			"y": "253px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "gray",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "168px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "89px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<p>Read in the Bike Sharing Dataset</p>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "12",			"name": "Sticky Note",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "245px",			"y": "32px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "gray",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "195px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "84px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<p>Split for training and test</p>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "13",			"name": "Sticky Note",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "619px",			"y": "41px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "gray",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "255px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "85px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<p>Build model using Distributed Random Forest</p>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "14",			"name": "Dataset Structured",			"description": "This Node creates a DataFrame by reading data from HDFS, HIVE etc. The dataset has been defined earlier in Fire by using the Dataset Feature. As a user, you just have to select the Dataset of your interest.",			"details": "This Node creates a DataFrame by reading data from HDFS, HIVE etc.<br>\n<br>\nThe data has been defined earlier in Fire by using the Dataset Feature. As a user, you just have to select the Dataset of your interest.<br>",			"examples": "",			"type": "dataset",			"nodeClass": "fire.nodes.dataset.NodeDatasetStructured",			"x": "111.979px",			"y": "129.99px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "dataset",					"value": "483967f2-e767-44fe-985d-a90a42a98cb5",					"widget": "dataset",					"title": "Dataset",					"description": "Selected Dataset",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		}	],	"edges": [		{			"source": "4",			"target": "3",			"id": 1		},		{			"source": "5",			"target": "4",			"id": 2		},		{			"source": "5",			"target": "6",			"id": 3		},		{			"source": "6",			"target": "4",			"id": 4		},		{			"source": "14",			"target": "5",			"id": 5		}	],	"dataSetDetails": [		{			"id": 3722,			"uuid": "483967f2-e767-44fe-985d-a90a42a98cb5",			"header": true,			"path": "data/bike_sharing_sample_dataset.csv",			"delimiter": ",",			"datasetType": "CSV",			"filterLinesContaining": "season",			"datasetSchema": "{\"colNames\":[\"datetime\",\"season\",\"holiday\",\"workingday\",\"weather\",\"temp\",\"atemp\",\"humidity\",\"windspeed\",\"casual\",\"registered\",\"count\"],\"colTypes\":[\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"DOUBLE\",\"INTEGER\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"INTEGER\"],\"colFormats\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"colMLTypes\":[\"TEXT\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\"]}"		}	],	"engine": "scala"}