{	"name": "H2O XGBoost",	"uuid": "88e98287-3089-4ab5-b7a0-490213740c29",	"category": "H2O",	"description": "-",	"parameters": "-",	"nodes": [		{			"id": "3",			"name": "PrintNRows",			"description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",			"details": "This node is used to print incoming dataset.<br>\n<br>\nNumber of rows that needs to be printed can be configured in the node.<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.util.NodePrintFirstNRows",			"x": "817.805px",			"y": "366.523px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "Row Values",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "n",					"value": "10",					"widget": "textfield",					"title": "Num Rows to Print",					"description": "number of rows to be printed",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "displayDataType",					"value": "true",					"widget": "array",					"title": "Display Data Type",					"description": "If true display rows DataType",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "5",			"name": "Split",			"description": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).",			"details": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data.<br>\n<br>\nFor example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).<br>\n<br>\nThe split node can be used for splitting the DataFrame for training and test datasets used in Machine Learning.<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.ml.NodeSplit",			"x": "408.422px",			"y": "280.156px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "fraction1",					"value": ".8",					"widget": "textfield",					"title": "Fraction 1",					"description": "Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "6",			"name": "H2OXGBoost",			"description": "XGBoost is a supervised learning algorithm that implements a process called boosting to yield accurate models.",			"details": "XGBoost is a supervised learning algorithm that implements a process called boosting to yield accurate models. Boosting refers to the ensemble learning technique of building many models sequentially, with each new model attempting to correct for the deficiencies in the previous model.<br>\n<br>\nMore details are available at : <a href=\"https://h2o-release.s3.amazonaws.com/h2o/rel-weierstrass/2/docs-website/h2o-docs/data-science/xgboost.html\" target=\"_blank\">h2o-release.s3.amazonaws.com/h2o/rel-weierstrass/2/docs-website/h2o-docs/data-science/xgboost.html</a><br>",			"examples": "",			"type": "ml-estimator",			"nodeClass": "fire.nodes.h2o.NodeH2OXGBoost",			"x": "619.609px",			"y": "164.625px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "isResponseIsCategorical",					"value": "true",					"widget": "array",					"title": "isResponseColIsCategorical",					"description": "Specify a response column type(numeric or categorical). Separates the Classification and Regression",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "labelCol",					"value": "label",					"widget": "variable",					"title": "Label Column",					"description": "Response variable column.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "featuresCols",					"value": "[\"LIMIT_BAL\",\"SEX\",\"EDUCATION\",\"MARRIAGE\",\"AGE\",\"PAY_0\",\"PAY_2\",\"PAY_3\",\"PAY_4\",\"PAY_5\",\"PAY_6\"]",					"widget": "variables",					"title": "Feature Columns",					"description": "Features to be used for Modelling",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "columnsToCategorical",					"value": "[]",					"widget": "variables",					"title": "Columns to Categorical",					"description": "Columns to be Categorical encoded",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "seed",					"value": "-1",					"widget": "textfield",					"title": "Seed",					"description": "Seed for pseudo random number generator (if applicable).",					"datatypes": [						"Long"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "nfolds",					"value": "0",					"widget": "textfield",					"title": "Number of Folds",					"description": "Number of folds for K-fold cross-validation (0 to disable or >= 2).",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "ntrees",					"value": "50",					"widget": "textfield",					"title": "Number of Trees",					"description": "Number of trees.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxDepth",					"value": "5",					"widget": "textfield",					"title": "Max Depth",					"description": "Maximum tree depth (0 for unlimited).",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "minRows",					"value": "10.0",					"widget": "textfield",					"title": "Min Rows",					"description": "Fewest allowed (weighted) observations in a leaf.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxBins",					"value": "256",					"widget": "textfield",					"title": "Max Bins",					"description": "For tree_method=hist only: maximum number of bins.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxLeaves",					"value": "0",					"widget": "textfield",					"title": "Max Leaves",					"description": "For tree_method=hist only: maximum number of leaves.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "treeMethod",					"value": "auto",					"widget": "array",					"title": "Tree Method",					"description": "Tree method.",					"datatypes": [						"string"					],					"optionsArray": [						"auto",						"exact",						"approx",						"hist"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "growPolicy",					"value": "depthwise",					"widget": "array",					"title": "Grow Policy",					"description": "Grow policy.",					"datatypes": [						"string"					],					"optionsArray": [						"depthwise",						"lossguide"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "booster",					"value": "dart",					"widget": "array",					"title": "Booster",					"description": "Booster",					"datatypes": [						"string"					],					"optionsArray": [						"gbtree",						"gblinear",						"dart"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "eta",					"value": "0.3",					"widget": "textfield",					"title": "Eta",					"description": "(same as learn_rate) Learning rate (from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "sampleRate",					"value": "1.0",					"widget": "textfield",					"title": "Sample Rate",					"description": "(same as subsample) Row sample rate per tree (from 0.0 to 1.0)..",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "categoricalEncoding",					"value": "AUTO",					"widget": "array",					"title": "Categorical Encoding",					"description": "Specify one of the various encoding schemes for handling categorical features",					"datatypes": [						"string"					],					"optionsArray": [						"AUTO",						"OneHotInternal",						"OneHotExplicit",						"Enum",						" Binary",						"Eigen",						"LabelEncode",						"SortByResponse",						"EnumLimited"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "ignoreConstCols",					"value": "true",					"widget": "array",					"title": "Ignore Const Columns",					"description": "Ignore constant columns.",					"datatypes": [						"boolean"					],					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "scoreEachIteration",					"value": "false",					"widget": "array",					"title": "Score Each Iteration",					"description": "Whether to score during each iteration of model training.",					"datatypes": [						"boolean"					],					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "stoppingRounds",					"value": "0",					"widget": "textfield",					"title": "Stopping Rounds",					"description": "Early stopping based on convergence of stopping_metric. Stop if simple moving average of length k of the stopping_metric does not improve for k:=stopping_rounds scoring events (0 to disable).",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxRuntimeSecs",					"value": "0.0",					"widget": "textfield",					"title": "Max Runtime Secs",					"description": "his argument specifies the maximum time that the AutoML process will run for. If both max_runtime_secs and max_models are specified, then the AutoML run will stop as soon as it hits either of these limits. If neither max_runtime_secs nor max_models are specified, then max_runtime_secs defaults to 3600 seconds (1 hour).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "stoppingMetric",					"value": "AUTO",					"widget": "array",					"title": "StoppingMetric",					"description": "Metric to use for early stopping (AUTO: logloss for classification, deviance for regression)",					"optionsArray": [						"AUTO",						"deviance",						"logloss",						"MSE",						"RMSE",						"MAE",						"RMSLE",						"AUC",						"AUCPR",						"lift_top_group",						"misclassification",						"mean_per_class_error",						"anomaly_score",						"custom",						"custom_increasing"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "stoppingTolerance",					"value": "0.001",					"widget": "textfield",					"title": "StoppingTolerance",					"description": "Relative tolerance for metric-based stopping criterion (stop if relative improvement is not at least this much)",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "gainsliftBins",					"value": "-1",					"widget": "textfield",					"title": "Gains Lift Bins",					"description": "Gains/Lift table number of bins. 0 means disabled.. Default value -1 means automatic binning.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "withContributions",					"value": "false",					"widget": "array",					"title": "With Contributions",					"description": "Enables or disables generating a sub-column of detailedPredictionCol containing Shapley values.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "advanced",					"value": "",					"widget": "tab",					"title": "Advanced",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "predictionCol",					"value": "prediction",					"widget": "textfield",					"title": "Prediction Column",					"description": "Prediction column name",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "detailedPredictionCol",					"value": "detailed_prediction",					"widget": "textfield",					"title": "Detailed Prediction column",					"description": "Column containing additional prediction details, its content depends on the model type",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "withLeafNodeAssignments",					"value": "false",					"widget": "array",					"title": "With Node Assignments",					"description": "Enables or disables computation of leaf node assignments.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "withStageResults",					"value": "false",					"widget": "array",					"title": "With Stage Results",					"description": "Enables or disables computation of stage results.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "minChildWeight",					"value": "1.0",					"widget": "textfield",					"title": "Min Child Weight",					"description": "(same as min_rows) Fewest allowed (weighted) observations in a leaf.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "learnRate",					"value": "0.1",					"widget": "textfield",					"title": "Learn Rate",					"description": "(Same as eta) Learning rate (from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "subsample",					"value": "1.0",					"widget": "textfield",					"title": "Sample Rate",					"description": "(same as sample_rate) Row sample rate per tree (from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "colSampleRate",					"value": "1.0",					"widget": "textfield",					"title": "Column Sample Rate",					"description": "Column sample rate(from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "colSampleByLevel",					"value": "1.0",					"widget": "textfield",					"title": "Column Sample By Level",					"description": "(same as col_sample_rate) Column sample rate (from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "colSampleRatePerTree",					"value": "1.0",					"widget": "textfield",					"title": "Column Sample Rate Per Tree",					"description": "(same as colsample_bytree) Column sample rate per tree (from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "colSampleByTree",					"value": "1.0",					"widget": "textfield",					"title": "Column Sample By Tree",					"description": "(same as col_sample_rate_per_tree) Column sample rate per tree (from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "colSampleByNode",					"value": "1.0",					"widget": "textfield",					"title": "Column Sample By Node",					"description": "Column sample rate per tree node (from 0.0 to 1.0).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxAbsLeafnodePred",					"value": "0.0",					"widget": "textfield",					"title": "Max Absolute Leaf Node Prediction",					"description": "(same as max_delta_step) Maximum absolute value of a leaf node prediction.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxDeltaStep",					"value": "10.0",					"widget": "textfield",					"title": "Max Delta Step",					"description": "(same as max_abs_leafnode_pred) Maximum absolute value of a leaf node prediction.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "scoreTreeInterval",					"value": "0",					"widget": "textfield",					"title": "Score Tree Interval",					"description": "Score the model after every so many trees. Disabled if set to 0.",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "minSplitImprovement",					"value": "0.0",					"widget": "textfield",					"title": "Minimum Split Improvement",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "gamma",					"value": "0.0",					"widget": "textfield",					"title": "Gamma",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "nthreads",					"value": "-1",					"widget": "textfield",					"title": "Number of Trees",					"description": "Number of parallel threads that can be used to run XGBoost. Cannot exceed H2O cluster limits (-nthreads parameter). Defaults to maximum available.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "buildTreeOneNode",					"value": "false",					"widget": "array",					"title": "Build tree one node",					"description": "Enables to run on a single node",					"datatypes": [						"boolean"					],					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "calibrateModel",					"value": "false",					"widget": "array",					"title": "Calibrate Model",					"description": "Use Platt Scaling to calculate calibrated class probabilities. Calibration can provide more accurate estimates of class probabilities.",					"datatypes": [						"boolean"					],					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "regLambda",					"value": "1.0",					"widget": "textfield",					"title": "Reg Lambda",					"description": "L2 regularization.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "regAlpha",					"value": "0.0",					"widget": "textfield",					"title": "Reg Alpha",					"description": "L1 regularization.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "quietMode",					"value": "false",					"widget": "array",					"title": "Quiet mode",					"description": "Enable quiet mode for less output to standard output.",					"datatypes": [						"boolean"					],					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "sampleType",					"value": "uniform",					"widget": "array",					"title": "Sample Type",					"description": "For booster=dart only: sample_type",					"datatypes": [						"string"					],					"optionsArray": [						"uniform",						"weighted"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "normalizeType",					"value": "tree",					"widget": "array",					"title": "Normalize Type",					"description": "For booster=dart only: normalize_type",					"datatypes": [						"string"					],					"optionsArray": [						"tree",						"forest"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "rateDrop",					"value": "0.0",					"widget": "textfield",					"title": "Rate Drop",					"description": "For booster=dart only: rate_drop (0..1).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "oneDrop",					"value": "false",					"widget": "array",					"title": "One Drop",					"description": "For booster=dart only: one_drop.",					"datatypes": [						"boolean"					],					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "skipDrop",					"value": "0.0",					"widget": "textfield",					"title": "Skip Drop",					"description": "For booster=dart only: skip_drop (0..1).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "dmatrixType",					"value": "auto",					"widget": "array",					"title": "Dmatrix Type",					"description": "Type of DMatrix. For sparse, NAs and 0 are treated equally.",					"datatypes": [						"string"					],					"optionsArray": [						"auto",						"dense",						"sparse"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "scalePosWeight",					"value": "1.0",					"widget": "textfield",					"title": "Sclaed Pos Weight",					"description": "Controls the effect of observations with positive labels in relation to the observations with negative labels on gradient calculation. Useful for imbalanced problems.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "keepCrossValidationModels",					"value": "true",					"widget": "array",					"title": "Keep Cross Validation Models",					"description": "Whether to keep the cross-validated models. Keeping cross-validation models may consume significantly more memory in the H2O cluster.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "keepCrossValidationPredictions",					"value": "false",					"widget": "array",					"title": "Keep Cross Validation Predictions",					"description": "Whether to keep the predictions of the cross-validation predictions. This needs to be set to TRUE if running the same AutoML object for repeated runs because CV predictions are required to build additional Stacked Ensemble models in AutoML.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "keepCrossValidationFoldAssignment",					"value": "false",					"widget": "array",					"title": "Keep Cross Validation Fold Assignment",					"description": "Whether to keep cross-validation assignments.",					"optionsArray": [						"false",						"true"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "distribution",					"value": "AUTO",					"widget": "array",					"title": "Distribution",					"description": "Distribution function.)",					"datatypes": [						"string"					],					"optionsArray": [						"AUTO",						"bernoulli",						"quasibinomial",						"modified_huber",						"multinomial",						"ordinal",						"gaussian",						"poisson",						"gamma",						"tweedie",						"huber",						"laplace",						"quantile",						"fractionalbinomial",						"negativebinomial",						"custom"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "tweediePower",					"value": "1.5",					"widget": "textfield",					"title": "Tweedie Power",					"description": "Tweedie power for Tweedie regression, must be between 1 and 2.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "quantileAlpha",					"value": "0.5",					"widget": "textfield",					"title": "Quantile Alhpa",					"description": "Desired quantile for Quantile regression, must be between 0 and 1.",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "huberAlpha",					"value": "0.9",					"widget": "textfield",					"title": "Huber Alpha",					"description": "Desired quantile for Huber/M-regression (threshold between quadratic and linear loss, must be between 0 and 1).",					"datatypes": [						"double"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "weightCol",					"value": "",					"widget": "variable",					"title": "Weight Column",					"description": "Column with observation weights. Giving some observation a weight of zero is equivalent to excluding it from the dataset; giving an observation a relative weight of 2 is equivalent to repeating that row twice. Negative weights are not allowed. Note: Weights are per-row observation weights and do not increase the size of the data frame. This is typically the number of times a row is repeated, but non-integer values are supported as well. During training, rows with higher weights matter more, due to the larger loss function pre-factor. If you set weight = 0 for a row, the returned prediction frame at that row is zero and this is incorrect. To get an accurate prediction, remove all rows with weight == 0.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "offsetCol",					"value": "",					"widget": "variable",					"title": "Offset Column",					"description": "Offset column. This will be added to the combination of columns before applying the link function.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "foldCol",					"value": "",					"widget": "variable",					"title": "Fold Column",					"description": "Column with cross-validation fold index assignment per observation.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "foldAssignment",					"value": "AUTO",					"widget": "array",					"title": "Fold Assignment",					"description": "Cross-validation fold assignment scheme, if fold_column is not specified. The 'Stratified' option will stratify the folds based on the response variable, for classification problems.",					"datatypes": [						"string"					],					"optionsArray": [						"AUTO",						"Random",						"Modulo",						"Stratified"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "aucType",					"value": "AUTO",					"widget": "array",					"title": "AUC Type",					"description": "Set default multinomial AUC type.",					"optionsArray": [						"AUTO",						"NONE",						"MACRO_OVR",						"WEIGHTED_OVR",						"MACRO_OVO",						"WEIGHTED_OVO"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "8",			"name": "ReadCSV",			"description": "It reads in CSV files and creates a DataFrame from it",			"details": "This node reads CSV files and creates a DataFrame from it.<br>",			"examples": "",			"type": "dataset",			"nodeClass": "fire.nodes.dataset.NodeDatasetCSV",			"x": "36.2969px",			"y": "271.312px",			"hint": "Whenever the file is changed, Refresh the Schema",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "path",					"value": "data/UCI_Credit_Card.csv",					"widget": "textfield",					"title": "Path",					"description": "Path of the Text file/directory",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "separator",					"value": ",",					"widget": "textfield",					"title": "Separator",					"description": "CSV Separator",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "header",					"value": "true",					"widget": "array",					"title": "Header",					"description": "Does the file have a header row",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "dropSpecialCharacterInColumnName",					"value": "true",					"widget": "array",					"title": "Drop Special Character In ColumnName",					"description": "Drop the SpecialCharacter and Space in Column Name.",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "dropMalformed",					"value": "false",					"widget": "array",					"title": "Drop Malformed",					"description": "Whether to drop Malformed records or error",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"ID\",\"LIMIT_BAL\",\"SEX\",\"EDUCATION\",\"MARRIAGE\",\"AGE\",\"PAY_0\",\"PAY_2\",\"PAY_3\",\"PAY_4\",\"PAY_5\",\"PAY_6\",\"BILL_AMT1\",\"BILL_AMT2\",\"BILL_AMT3\",\"BILL_AMT4\",\"BILL_AMT5\",\"BILL_AMT6\",\"PAY_AMT1\",\"PAY_AMT2\",\"PAY_AMT3\",\"PAY_AMT4\",\"PAY_AMT5\",\"PAY_AMT6\",\"default_payment_next_month\"]",					"widget": "schema_col_names",					"title": "Column Names for the CSV",					"description": "New Output Columns of the SQL",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\"]",					"widget": "schema_col_types",					"title": "Column Types for the CSV",					"description": "Data Type of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColFormats",					"value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",					"widget": "schema_col_formats",					"title": "Column Formats for the CSV",					"description": "Format of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "9",			"name": "SQL",			"description": "This node runs the given SQL on the incoming DataFrame",			"details": "This node receives an input data frame, creates a temporary table on top of that data frame.<br>\nAllows the user to write a SQL which would be executed on the temporary table.<br>\nThe resulting data frame of running the SQL is passed on to the next node.<br>",			"examples": "<h2>SQL Examples</h2>\n<br>\nBelow are some example of SQL. <br>\n<br>\nThey use the Temp Table Name to be : tempTable<br>\n<br>\nThe schem of the Input Dataframe is : id, price, lotsize, bedrooms, bathrms, stories, driveway, recroom, fullbase, gashw, airco, garagepl, prefarea<br>\n<br>\n<h4> avg price of house</h4>\n<br>\nselect avg(price) as avg_price from tempTable<br>\n<br>\n<br>\n<h4> bedrooms with avg price greater than 10000</h4>\n<br>\nselect bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000<br>\n<br>\n<br>\n<h4> house details with bedrooms avg price greater than 10000</h4>\n<br>\nselect tempTable.* , inner_table.avg_price from<br>\n(select bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000) as inner_table<br>\nJOIN tempTable ON(inner_table.bedrooms = tempTable.bedrooms)<br>",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeSQL",			"x": "234.203px",			"y": "286.219px",			"hint": "Whenever the table is changed, go to Schema tab and Refresh the Schema",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "tempTable",					"value": "fire_temp_table",					"widget": "textfield",					"title": "Temp Table",					"description": "Temp Table Name to be used",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "sql",					"value": "select fire_temp_table.* , case  when fire_temp_table.default_payment_next_month = 0 then 'NO' else 'YES' END as label \n   from fire_temp_table",					"widget": "textarea_large",					"type": "sql",					"title": "SQL",					"description": "SQL to be run",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "schema",					"value": "",					"widget": "tab",					"title": "Schema",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"ID\",\"LIMIT_BAL\",\"SEX\",\"EDUCATION\",\"MARRIAGE\",\"AGE\",\"PAY_0\",\"PAY_2\",\"PAY_3\",\"PAY_4\",\"PAY_5\",\"PAY_6\",\"BILL_AMT1\",\"BILL_AMT2\",\"BILL_AMT3\",\"BILL_AMT4\",\"BILL_AMT5\",\"BILL_AMT6\",\"PAY_AMT1\",\"PAY_AMT2\",\"PAY_AMT3\",\"PAY_AMT4\",\"PAY_AMT5\",\"PAY_AMT6\",\"default_payment_next_month\",\"label\"]",					"widget": "schema_col_names",					"title": "Output Column Names",					"description": "Name of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"STRING\"]",					"widget": "schema_col_types",					"title": "Output Column Types",					"description": "Data Type of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColFormats",					"value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",					"widget": "schema_col_formats",					"title": "Output Column Formats",					"description": "Format of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "10",			"name": "H2OMojoSave",			"description": "Saves an H2O MOJO ML model",			"details": "",			"examples": "",			"type": "ml-modelsave",			"nodeClass": "fire.nodes.h2o.NodeH2OMojoSave",			"x": "797.297px",			"y": "156.305px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "path",					"value": "/home/sparkflows/training_data/data/output/ml-h2o",					"widget": "textfield",					"title": "Path",					"description": "Path for saving the H2O MOJO",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "11",			"name": "StickyNote",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "13px",			"y": "22px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "gray",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "494px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "230px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<p><span style=\"background-color: rgb(252, 252, 252); color: rgb(64, 64, 64);\">XGBoost is a supervised learning algorithm that implements a process called boosting to yield accurate models. Boosting refers to the ensemble learning technique of building many models sequentially, with each new model attempting to correct for the deficiencies in the previous model.</span></p><p><br></p><p><span style=\"background-color: rgb(252, 252, 252); color: rgb(64, 64, 64);\">Details of h2o xgboost : </span><a href=\"https://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/xgboost.html#limitations\" rel=\"noopener noreferrer\" target=\"_blank\">https://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/xgboost.html#limitations</a></p><p><br></p><p>Dataset: <a href=\"https://www.kaggle.com/mlg-ulb/creditcardfraud\" rel=\"noopener noreferrer\" target=\"_blank\">https://www.kaggle.com/mlg-ulb/creditcardfraud</a></p><p><br></p><p>Currently it supported in local mode.</p>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "12",			"name": "H2O Score",			"description": "Scores the data using the H2O model",			"details": "",			"examples": "",			"type": "join",			"nodeClass": "fire.nodes.h2o.NodeH2OScore",			"x": "624px",			"y": "342px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		}	],	"edges": [		{			"source": "5",			"target": "6",			"id": 1		},		{			"source": "8",			"target": "9",			"id": 2		},		{			"source": "9",			"target": "5",			"id": 3		},		{			"source": "6",			"target": "10",			"id": 4		},		{			"source": "6",			"target": "12",			"id": 5		},		{			"source": "5",			"target": "12",			"id": 6		},		{			"source": "12",			"target": "3",			"id": 7		}	],	"dataSetDetails": [],	"engine": "scala"}