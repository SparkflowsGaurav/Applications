{	"name": "Outlier Detection Method",	"uuid": "969555b3-c048-4ebd-859b-0924d4280e88",	"category": "FeatureEngineering",	"nodes": [		{			"id": "6",			"name": "ReadCSV",			"description": "It reads in CSV files and creates a DataFrame from it",			"details": "This node reads CSV files and creates a DataFrame from it.<br>",			"examples": "",			"type": "dataset",			"nodeClass": "fire.nodes.dataset.NodeDatasetCSV",			"x": "88px",			"y": "191px",			"hint": "Whenever the file is changed, Refresh the Schema",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "path",					"value": "data/housing.csv",					"widget": "textfield",					"title": "Path",					"description": "Path of the Text file/directory",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "separator",					"value": ",",					"widget": "textfield",					"title": "Separator",					"description": "CSV Separator",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "header",					"value": "true",					"widget": "array",					"title": "Header",					"description": "Does the file have a header row",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "dropSpecialCharacterInColumnName",					"value": "true",					"widget": "array",					"title": "Drop Special Character In ColumnName",					"description": "Drop the SpecialCharacter and Space in Column Name.",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "dropMalformed",					"value": "true",					"widget": "array",					"title": "Drop Malformed",					"description": "Whether to drop Malformed records or error",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"id\",\"price\",\"lotsize\",\"bedrooms\",\"bathrms\",\"stories\",\"driveway\",\"recroom\",\"fullbase\",\"gashw\",\"airco\",\"garagepl\",\"prefarea\"]",					"widget": "schema_col_names",					"title": "Column Names for the CSV",					"description": "New Output Columns of the SQL",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"INTEGER\",\"STRING\"]",					"widget": "schema_col_types",					"title": "Column Types for the CSV",					"description": "Data Type of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColFormats",					"value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",					"widget": "schema_col_formats",					"title": "Column Formats for the CSV",					"description": "Format of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "8",			"name": "FlagOutlier",			"description": "Flag the outlier based on the selected column using Box-and-Whisker technique.",			"details": "This node identifies whether a data point is outlier in a series or not based on the lower and upper quantile set. <br>\n<br>\nIt can be checked against numeric columns only.<br>",			"examples": "FlagOutlier node can be configured as below:<br>\n<br>\nINPUT COLUMN TO FLAG THE OUTLIER\t:\tSALARY<br>\nLOWERQUANTILE\t\t\t\t\t\t          :\t0.25<br>\nUPPERQUANTILE\t\t\t\t\t\t          :\t0.75<br>\n<br>\nNew column [is_SALARY_outlier] would be added to the output specifing whether a data point is outlier or not.<br>",			"type": "transform",			"nodeClass": "fire.nodes.ml.NodeFlagOutlier",			"x": "305px",			"y": "191px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "inputCol",					"value": "price",					"widget": "variable",					"title": "Input Column to flag the outlier",					"description": "The Input Column to flag the outlier",					"datatypes": [						"double",						"integer",						"float"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "lowerQuantile",					"value": "0.25",					"widget": "textfield",					"title": "LowerQuantile",					"description": "",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "upperQuantile",					"value": "0.75",					"widget": "textfield",					"title": "UpperQuantile",					"description": "",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "10",			"name": "StickyNote",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "224px",			"y": "77px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "blue",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "349px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "53px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<p>Detect the outliers based on house price</p>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "11",			"name": "RowFilter",			"description": "This node creates a new DataFrame containing the rows that satisfy the given condition",			"details": "This node creates a new DataFrame containing only rows satisfying the given condition.<br>",			"examples": "<h2>Examples of Conditional Expression</h2>\n<br>\nBelow are some examples of the Conditions Expression which can be used.<br>\n<br>\n<ul>\n<li> col1 > 5 AND col2 > 3</li>\n</ul>\n<ul>\n<li> name is not NULL</li>\n</ul>\n<ul>\n<li> name is NULL</li>\n</ul>\n<ul>\n<li> usd_pledged_real > 0 and (category = \"Narrative Film\" or category == \"Music\") and goal > 100</li>\n</ul>\n<ul>\n<li> dt > '2021-09-03'  (dt column is of type date)</li>\n</ul>\n<ul>\n<li> datetime > '2011-01-01 00:00:00.0'     (datetime column is of type timestamp)</li>\n</ul>\n<ul>\n<li> datetime > '2011-01-01 00:00:00.0' and datetime < '2016-01-01 00:00:00.0'</li>\n</ul>",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeRowFilter",			"x": "589.953px",			"y": "190.969px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "conditionExpr",					"value": "is_price_outlier == 'NO'",					"widget": "textarea_small",					"title": "Conditional Expression",					"description": "The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real > 0 and (category = 1 or category == 2) and goal > 100",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "12",			"name": "PrintNRows",			"description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",			"details": "This node is used to print incoming dataset.<br>\n<br>\nNumber of rows that needs to be printed can be configured in the node.<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.util.NodePrintFirstNRows",			"x": "850.983px",			"y": "189.986px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "Row Values",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "n",					"value": "10",					"widget": "textfield",					"title": "Num Rows to Print",					"description": "number of rows to be printed",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "displayDataType",					"value": "true",					"widget": "array",					"title": "Display Data Type",					"description": "If true display rows DataType",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "13",			"name": "StickyNote",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "543.99px",			"y": "283.986px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "gray",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "184.020834px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "62.020834px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<p>Filter out the outliers</p>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "17",			"name": "HistoGram:  distribution of SalePrice",			"description": "Computes a histogram of the data using number of bins evenly spaced between the minimum and maximum of the specific columns.",			"details": "This node creates a histogram of the data using specified number of bins evenly spaced between the minimum and maximum of the specific columns.<br>\n<br>\nIt outputs a chart displaying histogram and bin details in tabular format.<br>\n<br>\nChart can be viewed in Column, Bar and Line format.<br>",			"examples": "Incoming Dataframe has following rows:<br>\n<br>\nEMP_CD       |    EMP_NAME       |    DEPT       |    SALARY       |    AGE       |    DATE_OF_JOINING       |    EMAIL<br>\n------------------------------------------------------------------------------------------------------------------------------------<br>\nE01          |    ANTHONY        |    HR         |    50000        |    40        |    2019-12-12            |    anthony@hrdept.com<br>\nE02          |    LISA           |    HR         |    35000        |    35        |    2019-02-28            |    lisa@hrdept.com<br>\nE03          |    MARTIN         |    HR         |    20000        |    25        |    2020-01-01            |    martin@nodept.com<br>\nE04          |    DAVID          |    SALES      |    55000        |    40        |    2021-12-13            |    david@salesdept.com<br>\nE05          |    MARK           |    SALES      |    60000        |    27        |    2020-01-01            |    mark@salesdept.com<br>\nE06          |    JOE            |    SALES      |    40000        |    31        |    2010-01-01            |    joe@salesdept.com<br>\nE07          |    BELLA          |    HR         |    60000        |    24        |    2001-12-12            |    bella@hrdept.com<br>\nE08          |    ROSE           |    SALES      |    60000        |    27        |    2002-12-12            |    rose@hrdept.com<br>\nE09          |    MICHAEL        |    SALES      |    61000        |    31        |    2003-09-12            |    michael@hrdept.com<br>\nE10          |    PATRICK        |    HR         |    60000        |    24        |    2004-10-12            |    patrik@hrdept.com<br>\n<br>\nif HistogramCal node is configured as below:<br>\n<br>\nCOLUMN NAME     :     SALARY<br>\nNUMBER OF BINS  :     10<br>\n<br>\nthen following equally spaced 10 bins would be created using MIN and MAX values of [SALARY] and same would be presented in Chart as well:<br>\n<br>\nindex    |   range                |    count<br>\n----------------------------------------------------------<br>\n1        |   20000.0 - 24100.0    |    1<br>\n2        |   24100.0 - 28200.0    |    0<br>\n3        |   28200.0 - 32300.0    |    0<br>\n4        |   32300.0 - 36400.0    |    1<br>\n5        |   36400.0 - 40500.0    |    1<br>\n6        |   40500.0 - 44600.0    |    0<br>\n7        |   44600.0 - 48700.0    |    0<br>\n8        |   48700.0 - 52800.0    |    1<br>\n9        |   52800.0 - 56900.0    |    1<br>\n10       |   56900.0 - 61000.0    |    5<br>",			"type": "transform",			"nodeClass": "fire.nodes.ml.NodeHistoGramCal",			"x": "181.988px",			"y": "282.987px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "Distribution of 'SalePrice' on Original Data",					"widget": "textfield",					"title": "Title",					"description": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "inputCols",					"value": "price",					"widget": "variable",					"title": "Column Name",					"description": "Name of column",					"datatypes": [						"double",						"integer",						"long"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bins",					"value": "10",					"widget": "textfield",					"title": "Number of Bins",					"description": "Number of Bins",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "18",			"name": "HistoGram: Post Removing Outliers",			"description": "Computes a histogram of the data using number of bins evenly spaced between the minimum and maximum of the specific columns.",			"details": "This node creates a histogram of the data using specified number of bins evenly spaced between the minimum and maximum of the specific columns.<br>\n<br>\nIt outputs a chart displaying histogram and bin details in tabular format.<br>\n<br>\nChart can be viewed in Column, Bar and Line format.<br>",			"examples": "Incoming Dataframe has following rows:<br>\n<br>\nEMP_CD       |    EMP_NAME       |    DEPT       |    SALARY       |    AGE       |    DATE_OF_JOINING       |    EMAIL<br>\n------------------------------------------------------------------------------------------------------------------------------------<br>\nE01          |    ANTHONY        |    HR         |    50000        |    40        |    2019-12-12            |    anthony@hrdept.com<br>\nE02          |    LISA           |    HR         |    35000        |    35        |    2019-02-28            |    lisa@hrdept.com<br>\nE03          |    MARTIN         |    HR         |    20000        |    25        |    2020-01-01            |    martin@nodept.com<br>\nE04          |    DAVID          |    SALES      |    55000        |    40        |    2021-12-13            |    david@salesdept.com<br>\nE05          |    MARK           |    SALES      |    60000        |    27        |    2020-01-01            |    mark@salesdept.com<br>\nE06          |    JOE            |    SALES      |    40000        |    31        |    2010-01-01            |    joe@salesdept.com<br>\nE07          |    BELLA          |    HR         |    60000        |    24        |    2001-12-12            |    bella@hrdept.com<br>\nE08          |    ROSE           |    SALES      |    60000        |    27        |    2002-12-12            |    rose@hrdept.com<br>\nE09          |    MICHAEL        |    SALES      |    61000        |    31        |    2003-09-12            |    michael@hrdept.com<br>\nE10          |    PATRICK        |    HR         |    60000        |    24        |    2004-10-12            |    patrik@hrdept.com<br>\n<br>\nif HistogramCal node is configured as below:<br>\n<br>\nCOLUMN NAME     :     SALARY<br>\nNUMBER OF BINS  :     10<br>\n<br>\nthen following equally spaced 10 bins would be created using MIN and MAX values of [SALARY] and same would be presented in Chart as well:<br>\n<br>\nindex    |   range                |    count<br>\n----------------------------------------------------------<br>\n1        |   20000.0 - 24100.0    |    1<br>\n2        |   24100.0 - 28200.0    |    0<br>\n3        |   28200.0 - 32300.0    |    0<br>\n4        |   32300.0 - 36400.0    |    1<br>\n5        |   36400.0 - 40500.0    |    1<br>\n6        |   40500.0 - 44600.0    |    0<br>\n7        |   44600.0 - 48700.0    |    0<br>\n8        |   48700.0 - 52800.0    |    1<br>\n9        |   52800.0 - 56900.0    |    1<br>\n10       |   56900.0 - 61000.0    |    5<br>",			"type": "transform",			"nodeClass": "fire.nodes.ml.NodeHistoGramCal",			"x": "741px",			"y": "90px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "Housing Price: Distribution of 'SalePrice' after Removing Outliers",					"widget": "textfield",					"title": "Title",					"description": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "inputCols",					"value": "price",					"widget": "variable",					"title": "Column Name",					"description": "Name of column",					"datatypes": [						"double",						"integer",						"long"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bins",					"value": "10",					"widget": "textfield",					"title": "Number of Bins",					"description": "Number of Bins",					"datatypes": [						"integer"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		}	],	"edges": [		{			"source": "6",			"target": "17",			"id": 1		},		{			"source": "6",			"target": "8",			"id": 2		},		{			"source": "8",			"target": "11",			"id": 3		},		{			"source": "11",			"target": "18",			"id": 4		},		{			"source": "11",			"target": "12",			"id": 5		}	],	"dataSetDetails": [],	"engine": "scala"}