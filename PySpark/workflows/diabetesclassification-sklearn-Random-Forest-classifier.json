{	"name": " diabetesclassification-sklearn-Random-Forest-classifier",	"uuid": "fe501c40-cdf9-4d36-9e3b-4a9216c171ea",	"category": "Classification",	"description": "Predict if a patient will be diabetic or not",	"parameters": "-",	"nodes": [		{			"id": "2",			"name": "DropRowsWithNull",			"description": "This node creates a new DataFrame by dropping rows containing null values",			"details": "",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeDropRowsWithNull",			"x": "182.576px",			"y": "191.214px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "scala"		},		{			"id": "3",			"name": "RowFilter - SkinThickness!=0",			"description": "This node creates a new DataFrame containing only rows satisfying given condition",			"details": "This node creates a new DataFrame containing only rows satisfying the given condition.<br>\n<br>\n<h2>Examples of Conditional Expression</h2>\n<br>\ncol1 > 5 AND col2 > 3<br>\n<br>\nname is not NULL<br>\n<br>\nname is NULL<br>\n<br>\nusd_pledged_real > 0 and (category = \"Narrative Film\" or category == \"Music\") and goal > 100<br>\n<br>\ndatetime > '2011-01-01 00:00:00.0'     (datetime column is of type timestamp)<br>\n<br>\ndatetime > '2011-01-01 00:00:00.0' and datetime < '2016-01-01 00:00:00.0'<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeRowFilter",			"x": "321.607px",			"y": "192.612px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "conditionExpr",					"value": "SkinThickness!=0",					"widget": "textarea_small",					"title": "Conditional Expression",					"description": "The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real > 0 and (category = 1 or category == 2) and goal > 100",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "4",			"name": "RowFilter - Insulin!=0",			"description": "This node creates a new DataFrame containing only rows satisfying given condition",			"details": "This node creates a new DataFrame containing only rows satisfying the given condition.<br>\n<br>\n<h2>Examples of Conditional Expression</h2>\n<br>\ncol1 > 5 AND col2 > 3<br>\n<br>\nname is not NULL<br>\n<br>\nname is NULL<br>\n<br>\nusd_pledged_real > 0 and (category = \"Narrative Film\" or category == \"Music\") and goal > 100<br>\n<br>\ndatetime > '2011-01-01 00:00:00.0'     (datetime column is of type timestamp)<br>\n<br>\ndatetime > '2011-01-01 00:00:00.0' and datetime < '2016-01-01 00:00:00.0'<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeRowFilter",			"x": "324.18px",			"y": "346.19px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "conditionExpr",					"value": "Insulin!=0",					"widget": "textarea_small",					"title": "Conditional Expression",					"description": "The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real > 0 and (category = 1 or category == 2) and goal > 100",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "6",			"name": "Split",			"description": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).",			"details": "",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.ml.NodeSplit",			"x": "470.596px",			"y": "343.594px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "fraction1",					"value": ".8",					"widget": "textfield",					"title": "Fraction 1",					"description": "Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "10",			"name": "StickyNote",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "107.994px",			"y": "45.9901px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "gray",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "416.011364px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "126.011364px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<p><strong>Sklearn Random forest Classifier</strong> to <span style=\"color: rgba(0, 0, 0, 0.7);\">predict whether or not the patients in the dataset have diabetes or not?</span></p><p><strong style=\"color: rgba(0, 0, 0, 0.7);\">Features -</strong> Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age</p><p><strong>Target - </strong>Outcome</p>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "12",			"name": "SklearnPredict",			"description": "Predict node takes in a DataFrame and Model and makes predictions",			"details": "",			"examples": "",			"type": "ml-predict",			"nodeClass": "fire.nodes.sklearn.NodeSklearnPredict",			"x": "619.193px",			"y": "356.185px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "featureCols",					"value": "[\"Pregnancies\",\"Glucose\",\"BloodPressure\",\"SkinThickness\",\"Insulin\",\"BMI\",\"DiabetesPedigreeFunction\",\"Age\"]",					"widget": "variables",					"title": "Feature Columns",					"description": "Feature columns of type - all numeric, boolean and vector",					"datatypes": [						"integer",						"long",						"double",						"float",						"int"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "targetCol",					"value": "Outcome",					"widget": "variable",					"title": "Target Column",					"description": "The label column for model fitting",					"datatypes": [						"integer",						"long",						"double",						"float",						"int"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "keyCol",					"value": "",					"widget": "variable",					"title": "Key Column",					"description": "The key column to identify the each row/data/sample.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "pyspark"		},		{			"id": "13",			"name": "PrintNRows",			"description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",			"details": "",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.util.NodePrintFirstNRows",			"x": "809.414px",			"y": "344.422px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "Row Values",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "n",					"value": "10",					"widget": "textfield",					"title": "Num Rows to Print",					"description": "number of rows to be printed",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "14",			"name": "SklearnClassificationEvaluator",			"description": "Evaluator for classification, which expects two input columns: prediction and label.",			"details": "",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.sklearn.NodeSklearnClassificationEvaluator",			"x": "641.169px",			"y": "491.724px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "targetCol",					"value": "Outcome",					"widget": "variable",					"title": "Label Column",					"description": "The label column for model fitting.",					"datatypes": [						"double",						"integer"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "predictCol",					"value": "predict",					"widget": "variable",					"title": "Prediction Column",					"description": "The prediction column.",					"datatypes": [						"double",						"integer"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "pyspark"		},		{			"id": "15",			"name": "patient_diabetes",			"description": "This node reads a table from Databricks",			"details": "",			"examples": "",			"type": "dataset",			"nodeClass": "fire.nodes.databricks.NodeReadDatabricksTable",			"x": "24.9583px",			"y": "192.953px",			"hint": "Whenever the table is changed, go to Schema tab and Refresh the Schema",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "db",					"value": "test",					"widget": "textfield",					"title": "Databricks Database",					"description": "Databricks Database",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "table",					"value": "diabetes_csv",					"widget": "textfield",					"title": "Databricks Table",					"description": "Databricks Table from which to read the data",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "query",					"value": "",					"widget": "textarea_medium",					"title": "Databricks Query (Optional)",					"description": "If a separate Databricks query needs to be used for reading from the Databricks table. This field is optional.",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "schema",					"value": "",					"widget": "tab",					"title": "Schema",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"Pregnancies\",\"Glucose\",\"BloodPressure\",\"SkinThickness\",\"Insulin\",\"BMI\",\"DiabetesPedigreeFunction\",\"Age\",\"Outcome\"]",					"widget": "schema_col_names",					"title": "Column Names of the Table",					"description": "Output Columns Names of the Table",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"DOUBLE\",\"INTEGER\",\"INTEGER\"]",					"widget": "schema_col_types",					"title": "Column Types of the Table",					"description": "Output Column Types of the Table",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColFormats",					"value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",					"widget": "schema_col_formats",					"title": "Column Formats",					"description": "Output Column Formats",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "16",			"name": "Sklearn Random Forest Classifier",			"description": "",			"details": "",			"examples": "",			"type": "ml-estimator",			"nodeClass": "fire.nodes.sklearn.NodeSklearnRandomForestClassifier",			"x": "606px",			"y": "210px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "targetCol",					"value": "Outcome",					"widget": "variable",					"title": "Target Column",					"description": "The label column for model fitting",					"datatypes": [						"integer",						"long",						"double",						"float",						"int"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "featureCols",					"value": "[\"Pregnancies\",\"Glucose\",\"BloodPressure\",\"SkinThickness\",\"Insulin\",\"BMI\",\"DiabetesPedigreeFunction\",\"Age\"]",					"widget": "variables",					"title": "Feature Columns",					"description": "Feature columns of type - all numeric, boolean and vector",					"datatypes": [						"integer",						"long",						"double",						"float",						"int"					],					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "n_estimators",					"value": "100",					"widget": "textfield",					"title": "NEstimators",					"description": "",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "criterion",					"value": "gini",					"widget": "array",					"title": "Criterion",					"description": "",					"optionsArray": [						"gini",						"entropy"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "max_depth",					"value": "",					"widget": "textfield",					"title": "MaxDepth",					"description": "Default value is None i.e -1",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "min_samples_split",					"value": "2",					"widget": "textfield",					"title": "MinSamplesSplit",					"description": "",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "min_samples_leaf",					"value": "1",					"widget": "textfield",					"title": "MinSamplesLeaf",					"description": "",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "min_weight_fraction_leaf",					"value": "0.0",					"widget": "textfield",					"title": "MinWeightFractionLeaf",					"description": "",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "max_features",					"value": "auto",					"widget": "array",					"title": "MaxFeatures",					"description": "",					"optionsArray": [						"auto",						"sqrt",						"log2",						"None"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "max_leaf_nodes",					"value": "-1",					"widget": "textfield",					"title": "MaxLeafNodes",					"description": "Default value is None i.e -1",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "min_impurity_decrease",					"value": "0",					"widget": "textfield",					"title": "MinImpurityDecrease",					"description": "",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "min_impurity_split",					"value": "1e-7",					"widget": "textfield",					"title": "MinImpuritySplit",					"description": "",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bootstrap",					"value": "True",					"widget": "array",					"title": "Bootstrap",					"description": "",					"optionsArray": [						"True",						"False"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "oob_score",					"value": "False",					"widget": "array",					"title": "OobScore",					"description": "",					"optionsArray": [						"True",						"False"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "random_state",					"value": "",					"widget": "textfield",					"title": "RandomState",					"description": "Default value is None i.e -1",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "warm_start",					"value": "False",					"widget": "array",					"title": "WarmStart",					"description": "",					"optionsArray": [						"True",						"False"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "pyspark"		}	],	"edges": [		{			"source": "2",			"target": "3",			"id": 1		},		{			"source": "3",			"target": "4",			"id": 2		},		{			"source": "4",			"target": "6",			"id": 3		},		{			"source": "6",			"target": "12",			"id": 4		},		{			"source": "12",			"target": "13",			"id": 5		},		{			"source": "12",			"target": "14",			"id": 6		},		{			"source": "15",			"target": "2",			"id": 7		},		{			"source": "6",			"target": "16",			"id": 8		},		{			"source": "16",			"target": "12",			"id": 9		}	],	"dataSetDetails": [],	"engine": "pyspark"}