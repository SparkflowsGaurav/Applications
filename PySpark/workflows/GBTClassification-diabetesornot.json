{  "name": "GBT Classification - diabetes or not",  "uuid": "77e090e8-25cb-4dd0-8e11-50515e7f2d73",  "category": "Classification",  "description": "Predict if a patient will be diabetic or not",  "parameters": "-",  "nodes": [    {      "id": "1",      "name": "ReadCSV",      "description": "It reads in CSV files and creates a DataFrame from it",      "details": "",      "examples": "",      "type": "dataset",      "nodeClass": "fire.nodes.dataset.NodeDatasetCSV",      "x": "19.1111px",      "y": "266.76px",      "hint": "Whenever the file is changed, Refresh the Schema",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "path",          "value": "data/diabetes.csv",          "widget": "textfield",          "title": "Path",          "description": "Path of the Text file/directory",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "separator",          "value": ",",          "widget": "textfield",          "title": "Separator",          "description": "CSV Separator",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "header",          "value": "true",          "widget": "array",          "title": "Header",          "description": "Does the file have a header row",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "dropMalformed",          "value": "true",          "widget": "array",          "title": "Drop Malformed",          "description": "Whether to drop Malformed records or error",          "optionsArray": [            "true",            "false"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColNames",          "value": "[\"Pregnancies\",\"Glucose\",\"BloodPressure\",\"SkinThickness\",\"Insulin\",\"BMI\",\"DiabetesPedigreeFunction\",\"Age\",\"Outcome\"]",          "widget": "schema_col_names",          "title": "Column Names for the CSV",          "description": "New Output Columns of the SQL",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColTypes",          "value": "[\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"DOUBLE\",\"INTEGER\",\"DOUBLE\"]",          "widget": "schema_col_types",          "title": "Column Types for the CSV",          "description": "Data Type of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputColFormats",          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",          "widget": "schema_col_formats",          "title": "Column Formats for the CSV",          "description": "Format of the Output Columns",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "2",      "name": "DropRowsWithNull",      "description": "This node creates a new DataFrame by dropping rows containing null values",      "details": "",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.etl.NodeDropRowsWithNull",      "x": "181.406px",      "y": "278.038px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "scala"    },    {      "id": "3",      "name": "RowFilter",      "description": "This node creates a new DataFrame containing only rows satisfying given condition",      "details": "This node creates a new DataFrame containing only rows satisfying the given condition.<br>\n<br>\n<h2>Examples of Conditional Expression</h2>\n<br>\ncol1 > 5 AND col2 > 3<br>\n<br>\nname is not NULL<br>\n<br>\nname is NULL<br>\n<br>\nusd_pledged_real > 0 and (category = \"Narrative Film\" or category == \"Music\") and goal > 100<br>\n<br>\ndatetime > '2011-01-01 00:00:00.0'     (datetime column is of type timestamp)<br>\n<br>\ndatetime > '2011-01-01 00:00:00.0' and datetime < '2016-01-01 00:00:00.0'<br>",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.etl.NodeRowFilter",      "x": "321.413px",      "y": "273.42px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "conditionExpr",          "value": "SkinThickness!=0",          "widget": "textarea_small",          "title": "Conditional Expression",          "description": "The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real > 0 and (category = 1 or category == 2) and goal > 100",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "4",      "name": "RowFilter",      "description": "This node creates a new DataFrame containing only rows satisfying given condition",      "details": "This node creates a new DataFrame containing only rows satisfying the given condition.<br>\n<br>\n<h2>Examples of Conditional Expression</h2>\n<br>\ncol1 > 5 AND col2 > 3<br>\n<br>\nname is not NULL<br>\n<br>\nname is NULL<br>\n<br>\nusd_pledged_real > 0 and (category = \"Narrative Film\" or category == \"Music\") and goal > 100<br>\n<br>\ndatetime > '2011-01-01 00:00:00.0'     (datetime column is of type timestamp)<br>\n<br>\ndatetime > '2011-01-01 00:00:00.0' and datetime < '2016-01-01 00:00:00.0'<br>",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.etl.NodeRowFilter",      "x": "333.198px",      "y": "422.208px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "conditionExpr",          "value": "Insulin!=0",          "widget": "textarea_small",          "title": "Conditional Expression",          "description": "The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real > 0 and (category = 1 or category == 2) and goal > 100",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "5",      "name": "VectorAssembler",      "description": "Merges multiple columns into a vector column",      "details": "",      "examples": "",      "type": "ml-transformer",      "nodeClass": "fire.nodes.ml.NodeVectorAssembler",      "x": "476.51px",      "y": "271.51px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "inputCols",          "value": "[\"Glucose\",\"BloodPressure\",\"SkinThickness\",\"Insulin\",\"BMI\",\"DiabetesPedigreeFunction\",\"Age\",\"Outcome\"]",          "widget": "variables",          "title": "Input Columns",          "description": "Input column of type - all numeric, boolean and vector",          "datatypes": [            "integer",            "long",            "double",            "float",            "vectorudt"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "outputCol",          "value": "features",          "widget": "textfield",          "title": "Output Column",          "description": "Output column name",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "6",      "name": "Split",      "description": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows and the other containing the remaining 30%.",      "details": "",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.ml.NodeSplit",      "x": "517.396px",      "y": "426.413px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "fraction1",          "value": ".8",          "widget": "textfield",          "title": "Fraction 1",          "description": "Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.",          "required": true,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "7",      "name": "GBTClassifier",      "description": "Gradient-Boosted Trees (GBTs) is a learning algorithm for classification. It supports binary labels, as well as both continuous and categorical features. Note: Multiclass labels are not currently supported.",      "details": "",      "examples": "",      "type": "ml-estimator",      "nodeClass": "fire.nodes.ml.NodeGBTClassifier",      "x": "689.729px",      "y": "281.736px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "featuresCol",          "value": "features",          "widget": "variable",          "title": "Features Column",          "description": "Features column of type vectorUDT for model fitting",          "datatypes": [            "vectorudt"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "labelCol",          "value": "Outcome",          "widget": "variable",          "title": "Label Column",          "description": "The label column for model fitting",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "predictionCol",          "value": "",          "widget": "textfield",          "title": "Prediction Column",          "description": "The prediction column created during model scoring.",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "impurity",          "value": "gini",          "widget": "array",          "title": "Impurity",          "description": "The Criterion used for information gain calculation",          "optionsArray": [            "gini",            "entropy"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "lossType",          "value": "logistic",          "widget": "array",          "title": "Loss Function",          "description": "The Loss function which GBT tries to minimize",          "optionsArray": [            "logistic"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxBins",          "value": "32",          "widget": "textfield",          "title": "Max Bins",          "description": "The maximum number of bins used for discretizing continuous features.Must be >= 2 and >= number of categories in any categorical feature.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxDepth",          "value": "5",          "widget": "textfield",          "title": "Max Depth",          "description": "The Maximum depth of a tree",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxIter",          "value": "20",          "widget": "textfield",          "title": "Max Iterations",          "description": "The maximum number of iterations(>=0)(a.k.a numtrees)",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "minInfoGain",          "value": "0.0",          "widget": "textfield",          "title": "Min Information Gain",          "description": "The Minimum information gain for a split to be considered at a tree node",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "minInstancesPerNode",          "value": "1",          "widget": "textfield",          "title": "Min Instances Per Node",          "description": "The Minimum number of instances each child must have after split",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "subsamplingRate",          "value": "1.0",          "widget": "textfield",          "title": "Subsampling Rate",          "description": "The fraction of the training data used for learning each decision tree.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "seed",          "value": "",          "widget": "textfield",          "title": "Seed",          "description": "The random seed",          "datatypes": [            "long"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "stepSize",          "value": "0.1",          "widget": "textfield",          "title": "Step Size",          "description": "Step size (a.k.a. learning rate), The step size to be used for each iteration of optimization.",          "datatypes": [            "double"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "cacheNodeIds",          "value": "false",          "widget": "array",          "title": "Cache Node Ids",          "description": "The caching nodes IDs. Can speed up training of deeper trees.",          "datatypes": [            "boolean"          ],          "optionsArray": [            "false",            "true"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "checkpointInterval",          "value": "10",          "widget": "textfield",          "title": "Checkpoint Interval",          "description": "The checkpoint interval. E.g. 10 means that the cache will get checkpointed every 10 iterations.Set checkpoint interval (>= 1) or disable checkpoint (-1)",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxMemoryInMB",          "value": "256",          "widget": "textfield",          "title": "Max memory",          "description": "Maximum memory in MB allocated to histogram aggregation.",          "datatypes": [            "integer"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "gridSearch",          "value": "",          "widget": "tab",          "title": "Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "minInfoGainGrid",          "value": "",          "widget": "textfield",          "title": "Min Information Gain Param Grid Search",          "description": "Min Information Gain Parameters for Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxBinsGrid",          "value": "",          "widget": "textfield",          "title": "Max Bins Param Grid Search",          "description": "Max Bins Parameters for Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxDepthGrid",          "value": "",          "widget": "textfield",          "title": "Max Depth Param Grid Search",          "description": "Max Depth Parameters for Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "maxIterGrid",          "value": "",          "widget": "textfield",          "title": "Max Iteration Param Grid Search",          "description": "Max Iteration Parameters for Grid Search",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "8",      "name": "Predict",      "description": "Predict node takes in a DataFrame and Model and makes predictions",      "details": "",      "examples": "",      "type": "ml-predict",      "nodeClass": "fire.nodes.ml.NodePredict",      "x": "730.205px",      "y": "427.212px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "9",      "name": "PrintNRows",      "description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",      "details": "",      "examples": "",      "type": "transform",      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",      "x": "892.32px",      "y": "396.309px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "title",          "value": "Row Values",          "widget": "textfield",          "title": "Title",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "n",          "value": "10",          "widget": "textfield",          "title": "Num Rows to Print",          "description": "number of rows to be printed",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    },    {      "id": "10",      "name": "StickyNote",      "description": "Allows capturing Notes on the Workflow",      "details": "",      "examples": "",      "type": "sticky",      "nodeClass": "fire.nodes.doc.NodeStickyNote",      "x": "579px",      "y": "72px",      "fields": [        {          "name": "storageLevel",          "value": "DEFAULT",          "widget": "array",          "title": "Output Storage Level",          "description": "Storage Level of the Output Datasets of this Node",          "optionsArray": [            "DEFAULT",            "NONE",            "DISK_ONLY",            "DISK_ONLY_2",            "MEMORY_ONLY",            "MEMORY_ONLY_2",            "MEMORY_ONLY_SER",            "MEMORY_ONLY_SER_2",            "MEMORY_AND_DISK",            "MEMORY_AND_DISK_2",            "MEMORY_AND_DISK_SER",            "MEMORY_AND_DISK_SER_2",            "OFF_HEAP"          ],          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "bgColor",          "value": "gray",          "widget": "textfield",          "title": "Bg Color",          "description": "Background of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "width",          "value": "320.77778px",          "widget": "textfield",          "title": "Width",          "description": "Width of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "height",          "value": "81.77778px",          "widget": "textfield",          "title": "Height",          "description": "Height of note",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        },        {          "name": "comment",          "value": "<p>Spark GBTClassifier.</p>",          "widget": "textarea_rich",          "title": "Comment",          "description": "Comments for the Workflow",          "required": false,          "display": true,          "editable": true,          "disableRefresh": false        }      ],      "engine": "all"    }  ],  "edges": [    {      "source": "1",      "target": "2",      "id": 1    },    {      "source": "2",      "target": "3",      "id": 2    },    {      "source": "3",      "target": "4",      "id": 3    },    {      "source": "4",      "target": "5",      "id": 4    },    {      "source": "5",      "target": "6",      "id": 5    },    {      "source": "6",      "target": "7",      "id": 6    },    {      "source": "7",      "target": "8",      "id": 7    },    {      "source": "6",      "target": "8",      "id": 8    },    {      "source": "8",      "target": "9",      "id": 9    }  ],  "dataSetDetails": [],  "engine": "pyspark"}