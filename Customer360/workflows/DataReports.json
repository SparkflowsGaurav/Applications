{	"name": "Data Reports",	"uuid": "ad1cb1d1-480c-4e93-b0cd-9f878c7ab71d",	"category": "Customer 360",	"nodes": [		{			"id": "1",			"name": "Read CSV",			"description": "It reads in CSV files and creates a DataFrame from it",			"details": "This node reads CSV files and creates a DataFrame from it.<br>",			"examples": "",			"type": "dataset",			"nodeClass": "fire.nodes.dataset.NodeDatasetCSV",			"x": "41px",			"y": "230px",			"hint": "Whenever the file is changed, Refresh the Schema",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "path",					"value": "data/customer-360/customer-agg-data",					"widget": "textfield",					"title": "Path",					"description": "Path of the Text file/directory",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "separator",					"value": ",",					"widget": "textfield",					"title": "Separator",					"description": "CSV Separator",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "header",					"value": "true",					"widget": "array",					"title": "Header",					"description": "Does the file have a header row",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "dropSpecialCharacterInColumnName",					"value": "true",					"widget": "array",					"title": "Drop Special Character In ColumnName",					"description": "Drop the SpecialCharacter and Space in Column Name.",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "dropMalformed",					"value": "false",					"widget": "array",					"title": "Drop Malformed",					"description": "Whether to drop Malformed records or error",					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"CustomerID\",\"RegistrationDate\",\"Age\",\"gender\",\"occupation\",\"income\",\"DepositType\",\"Tenure\",\"SavingsID\",\"AvgBalance\",\"LoanID\",\"LoanAccountType\",\"SanctionedAmount\",\"loan_Tenure\",\"num_cards\",\"CardTypes\",\"CardLimits\",\"total_tx_amount\",\"total_num_transaction\",\"NumTransTypes\",\"last_30_days_tx_amount\",\"last_30_days_transaction\",\"last_60_days_tx_amount\",\"last_60_days_transaction\",\"last_90_days_tx_amount\",\"last_90_days_transaction\",\"last_txt_date\",\"first_txt_date\",\"isNewCustomer\"]",					"widget": "schema_col_names",					"title": "Column Names for the CSV",					"description": "New Output Columns of the SQL",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"STRING\",\"STRING\",\"INTEGER\",\"STRING\",\"STRING\",\"INTEGER\",\"STRING\",\"INTEGER\",\"STRING\",\"INTEGER\",\"STRING\",\"STRING\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"STRING\",\"STRING\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"STRING\",\"STRING\",\"INTEGER\"]",					"widget": "schema_col_types",					"title": "Column Types for the CSV",					"description": "Data Type of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColFormats",					"value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",					"widget": "schema_col_formats",					"title": "Column Formats for the CSV",					"description": "Format of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "2",			"name": "occupation",			"description": "This node runs the given SQL on the incoming DataFrame",			"details": "This node receives an input data frame, creates a temporary table on top of that data frame.<br>\nAllows the user to write a SQL which would be executed on the temporary table.<br>\nThe resulting data frame of running the SQL is passed on to the next node.<br>",			"examples": "<h2>SQL Examples</h2>\n<br>\nBelow are some example of SQL. <br>\n<br>\nThey use the Temp Table Name to be : tempTable<br>\n<br>\nThe schem of the Input Dataframe is : id, price, lotsize, bedrooms, bathrms, stories, driveway, recroom, fullbase, gashw, airco, garagepl, prefarea<br>\n<br>\n<h4> avg price of house</h4>\n<br>\nselect avg(price) as avg_price from tempTable<br>\n<br>\n<br>\n<h4> bedrooms with avg price greater than 10000</h4>\n<br>\nselect bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000<br>\n<br>\n<br>\n<h4> house details with bedrooms avg price greater than 10000</h4>\n<br>\nselect tempTable.* , inner_table.avg_price from<br>\n(select bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000) as inner_table<br>\nJOIN tempTable ON(inner_table.bedrooms = tempTable.bedrooms)<br>",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeSQL",			"x": "40px",			"y": "64px",			"hint": "Whenever the table is changed, go to Schema tab and Refresh the Schema",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "tempTable",					"value": "fire_temp_table",					"widget": "textfield",					"title": "Temp Table",					"description": "Temp Table Name to be used",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "sql",					"value": "select occupation, count(*) as count from fire_temp_table group by occupation",					"widget": "textarea_large",					"type": "sql",					"title": "SQL",					"description": "SQL to be run",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "schema",					"value": "",					"widget": "tab",					"title": "Schema",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"occupation\",\"count\"]",					"widget": "schema_col_names",					"title": "Output Column Names",					"description": "Name of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"STRING\",\"LONG\"]",					"widget": "schema_col_types",					"title": "Output Column Types",					"description": "Data Type of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColFormats",					"value": "[\"\",\"\"]",					"widget": "schema_col_formats",					"title": "Output Column Formats",					"description": "Format of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "3",			"name": "occupation vs count",			"details": "This node represents variation between data of various data series in Graphical format.<br>\n<br>\nMultiple numeric columns can be plotted along Y-Coordinate. Only one can be selected along X-Coordinate.<br>\n<br>\nVariation between dataseries is plotted as graph of the selected type such as Line-Chart, Bar-Chart or so on.<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.graph.NodeGraphValues",			"x": "194px",			"y": "26px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "occupation vs count",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "xlabel",					"value": "occupation",					"widget": "textfield",					"title": "X Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "ylabel",					"value": "cout",					"widget": "textfield",					"title": "Y Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxValuesToDisplay",					"value": "20",					"widget": "textfield",					"title": "Max Values To Display",					"description": "Maximum number of values to display in result.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "graphType",					"value": "COLUMNCHART",					"widget": "enum",					"title": "Chart Type",					"optionsMap": {						"LINECHART": "Line Chart",						"COLUMNCHART": "Side by Side Bar Chart",						"BARCHART": "Stacked Bar Chart",						"PIE": "Pie Chart",						"SCATTERCHART": "Scatter Chart",						"DUALLINECHART": "Dual Line Chart",						"AREACHART": "Area Chart"					},					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "chartColors",					"value": "",					"widget": "colors",					"title": "Chart Colors",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "isStreaming",					"value": "false",					"widget": "array",					"title": "Is Streaming?",					"description": "Whether the Graph is a Streaming Graph or not",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "xCol",					"value": "occupation",					"widget": "variable",					"title": "X Column",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "yCols",					"value": "[\"count\"]",					"widget": "variables",					"title": "Y Columns",					"datatypes": [						"integer",						"long",						"double",						"float"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "4",			"name": "gender",			"description": "This node runs the given SQL on the incoming DataFrame",			"details": "This node receives an input data frame, creates a temporary table on top of that data frame.<br>\nAllows the user to write a SQL which would be executed on the temporary table.<br>\nThe resulting data frame of running the SQL is passed on to the next node.<br>",			"examples": "<h2>SQL Examples</h2>\n<br>\nBelow are some example of SQL. <br>\n<br>\nThey use the Temp Table Name to be : tempTable<br>\n<br>\nThe schem of the Input Dataframe is : id, price, lotsize, bedrooms, bathrms, stories, driveway, recroom, fullbase, gashw, airco, garagepl, prefarea<br>\n<br>\n<h4> avg price of house</h4>\n<br>\nselect avg(price) as avg_price from tempTable<br>\n<br>\n<br>\n<h4> bedrooms with avg price greater than 10000</h4>\n<br>\nselect bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000<br>\n<br>\n<br>\n<h4> house details with bedrooms avg price greater than 10000</h4>\n<br>\nselect tempTable.* , inner_table.avg_price from<br>\n(select bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000) as inner_table<br>\nJOIN tempTable ON(inner_table.bedrooms = tempTable.bedrooms)<br>",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeSQL",			"x": "191px",			"y": "149px",			"hint": "Whenever the table is changed, go to Schema tab and Refresh the Schema",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "tempTable",					"value": "fire_temp_table",					"widget": "textfield",					"title": "Temp Table",					"description": "Temp Table Name to be used",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "sql",					"value": "select gender, count(*) as count from fire_temp_table group by gender",					"widget": "textarea_large",					"type": "sql",					"title": "SQL",					"description": "SQL to be run",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "schema",					"value": "",					"widget": "tab",					"title": "Schema",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"gender\",\"count\"]",					"widget": "schema_col_names",					"title": "Output Column Names",					"description": "Name of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"STRING\",\"LONG\"]",					"widget": "schema_col_types",					"title": "Output Column Types",					"description": "Data Type of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColFormats",					"value": "[\"\",\"\"]",					"widget": "schema_col_formats",					"title": "Output Column Formats",					"description": "Format of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "5",			"name": "gender vs count",			"details": "This node represents variation between data of various data series in Graphical format.<br>\n<br>\nMultiple numeric columns can be plotted along Y-Coordinate. Only one can be selected along X-Coordinate.<br>\n<br>\nVariation between dataseries is plotted as graph of the selected type such as Line-Chart, Bar-Chart or so on.<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.graph.NodeGraphValues",			"x": "381px",			"y": "130px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "gender vs count",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "xlabel",					"value": "gender",					"widget": "textfield",					"title": "X Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "ylabel",					"value": "cout",					"widget": "textfield",					"title": "Y Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxValuesToDisplay",					"value": "20",					"widget": "textfield",					"title": "Max Values To Display",					"description": "Maximum number of values to display in result.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "graphType",					"value": "COLUMNCHART",					"widget": "enum",					"title": "Chart Type",					"optionsMap": {						"LINECHART": "Line Chart",						"COLUMNCHART": "Side by Side Bar Chart",						"BARCHART": "Stacked Bar Chart",						"PIE": "Pie Chart",						"SCATTERCHART": "Scatter Chart",						"DUALLINECHART": "Dual Line Chart",						"AREACHART": "Area Chart"					},					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "chartColors",					"value": "",					"widget": "colors",					"title": "Chart Colors",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "isStreaming",					"value": "false",					"widget": "array",					"title": "Is Streaming?",					"description": "Whether the Graph is a Streaming Graph or not",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "xCol",					"value": "gender",					"widget": "variable",					"title": "X Column",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "yCols",					"value": "[\"count\"]",					"widget": "variables",					"title": "Y Columns",					"datatypes": [						"integer",						"long",						"double",						"float"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "6",			"name": "Correlation: Age vs Income",			"description": "calculates the correlation between two series of data.",			"details": "This node calculates the correlation between two series of data in a common operation in Statistics.<br>\n<br>\nMore at Spark MLlib/ML docs page : <a href=\"http://spark.apache.org/docs/latest/mllib-statistics.html#correlations\" target=\"_blank\">spark.apache.org/docs/latest/mllib-statistics.html#correlations</a><br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.ml.NodeCorrelation",			"x": "71px",			"y": "390px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "Correlation Matrix",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "inputCols",					"value": "[\"Age\",\"income\"]",					"widget": "variables",					"title": "Input Column for Correlation",					"description": "Column Names to check correlation ",					"datatypes": [						"integer",						"long",						"double",						"float"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "handleInvalid",					"value": "skip",					"widget": "array",					"title": "Handle invalid pairs",					"description": "Handle invalid pairs.",					"datatypes": [						"string"					],					"optionsArray": [						"skip",						"error",						"keep"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "7",			"name": "Sticky Note",			"description": "Allows capturing Notes on the Workflow",			"details": "",			"examples": "",			"type": "sticky",			"nodeClass": "fire.nodes.doc.NodeStickyNote",			"x": "558px",			"y": "65px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "bgColor",					"value": "gray",					"widget": "textfield",					"title": "Bg Color",					"description": "Background of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "width",					"value": "318px",					"widget": "textfield",					"title": "Width",					"description": "Width of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "height",					"value": "156px",					"widget": "textfield",					"title": "Height",					"description": "Height of note",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "comment",					"value": "<p>Reports:</p><ul><li>occupation vs count</li><li>gender vs count</li><li>correlation: age &amp; income</li><li>scatter plot: age vs income</li></ul>",					"widget": "textarea_rich",					"title": "Comment",					"description": "Comments for the Workflow",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "8",			"name": "age",			"description": "This node runs the given SQL on the incoming DataFrame",			"details": "This node receives an input data frame, creates a temporary table on top of that data frame.<br>\nAllows the user to write a SQL which would be executed on the temporary table.<br>\nThe resulting data frame of running the SQL is passed on to the next node.<br>",			"examples": "<h2>SQL Examples</h2>\n<br>\nBelow are some example of SQL. <br>\n<br>\nThey use the Temp Table Name to be : tempTable<br>\n<br>\nThe schem of the Input Dataframe is : id, price, lotsize, bedrooms, bathrms, stories, driveway, recroom, fullbase, gashw, airco, garagepl, prefarea<br>\n<br>\n<h4> avg price of house</h4>\n<br>\nselect avg(price) as avg_price from tempTable<br>\n<br>\n<br>\n<h4> bedrooms with avg price greater than 10000</h4>\n<br>\nselect bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000<br>\n<br>\n<br>\n<h4> house details with bedrooms avg price greater than 10000</h4>\n<br>\nselect tempTable.* , inner_table.avg_price from<br>\n(select bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000) as inner_table<br>\nJOIN tempTable ON(inner_table.bedrooms = tempTable.bedrooms)<br>",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeSQL",			"x": "254px",			"y": "245px",			"hint": "Whenever the table is changed, go to Schema tab and Refresh the Schema",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "tempTable",					"value": "fire_temp_table",					"widget": "textfield",					"title": "Temp Table",					"description": "Temp Table Name to be used",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "sql",					"value": "select Age, sum(income) as income from fire_temp_table group by Age",					"widget": "textarea_large",					"type": "sql",					"title": "SQL",					"description": "SQL to be run",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "schema",					"value": "",					"widget": "tab",					"title": "Schema",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"Age\",\"income\"]",					"widget": "schema_col_names",					"title": "Output Column Names",					"description": "Name of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"INTEGER\",\"LONG\"]",					"widget": "schema_col_types",					"title": "Output Column Types",					"description": "Data Type of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColFormats",					"value": "[\"\",\"\"]",					"widget": "schema_col_formats",					"title": "Output Column Formats",					"description": "Format of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "9",			"name": "age vs income: scatter plot",			"details": "This node represents variation between data of various data series in Graphical format.<br>\n<br>\nMultiple numeric columns can be plotted along Y-Coordinate. Only one can be selected along X-Coordinate.<br>\n<br>\nVariation between dataseries is plotted as graph of the selected type such as Line-Chart, Bar-Chart or so on.<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.graph.NodeGraphValues",			"x": "454px",			"y": "240px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "age vs income",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "xlabel",					"value": "age",					"widget": "textfield",					"title": "X Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "ylabel",					"value": "income",					"widget": "textfield",					"title": "Y Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxValuesToDisplay",					"value": "100",					"widget": "textfield",					"title": "Max Values To Display",					"description": "Maximum number of values to display in result.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "graphType",					"value": "SCATTERCHART",					"widget": "enum",					"title": "Chart Type",					"optionsMap": {						"LINECHART": "Line Chart",						"COLUMNCHART": "Side by Side Bar Chart",						"BARCHART": "Stacked Bar Chart",						"PIE": "Pie Chart",						"SCATTERCHART": "Scatter Chart",						"DUALLINECHART": "Dual Line Chart",						"AREACHART": "Area Chart"					},					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "chartColors",					"value": "",					"widget": "colors",					"title": "Chart Colors",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "isStreaming",					"value": "false",					"widget": "array",					"title": "Is Streaming?",					"description": "Whether the Graph is a Streaming Graph or not",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "xCol",					"value": "Age",					"widget": "variable",					"title": "X Column",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "yCols",					"value": "[\"income\"]",					"widget": "variables",					"title": "Y Columns",					"datatypes": [						"integer",						"long",						"double",						"float"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "10",			"name": "age & count",			"description": "This node runs the given SQL on the incoming DataFrame",			"details": "This node receives an input data frame, creates a temporary table on top of that data frame.<br>\nAllows the user to write a SQL which would be executed on the temporary table.<br>\nThe resulting data frame of running the SQL is passed on to the next node.<br>",			"examples": "<h2>SQL Examples</h2>\n<br>\nBelow are some example of SQL. <br>\n<br>\nThey use the Temp Table Name to be : tempTable<br>\n<br>\nThe schem of the Input Dataframe is : id, price, lotsize, bedrooms, bathrms, stories, driveway, recroom, fullbase, gashw, airco, garagepl, prefarea<br>\n<br>\n<h4> avg price of house</h4>\n<br>\nselect avg(price) as avg_price from tempTable<br>\n<br>\n<br>\n<h4> bedrooms with avg price greater than 10000</h4>\n<br>\nselect bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000<br>\n<br>\n<br>\n<h4> house details with bedrooms avg price greater than 10000</h4>\n<br>\nselect tempTable.* , inner_table.avg_price from<br>\n(select bedrooms, avg_price from<br>\n(select bedrooms, avg(price) as avg_price from tempTable group by bedrooms) as temp where avg_price > 10000) as inner_table<br>\nJOIN tempTable ON(inner_table.bedrooms = tempTable.bedrooms)<br>",			"type": "transform",			"nodeClass": "fire.nodes.etl.NodeSQL",			"x": "218px",			"y": "369px",			"hint": "Whenever the table is changed, go to Schema tab and Refresh the Schema",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "tempTable",					"value": "fire_temp_table",					"widget": "textfield",					"title": "Temp Table",					"description": "Temp Table Name to be used",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "sql",					"value": "select age, count(*) as count from fire_temp_table group by age",					"widget": "textarea_large",					"type": "sql",					"title": "SQL",					"description": "SQL to be run",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "schema",					"value": "",					"widget": "tab",					"title": "Schema",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColNames",					"value": "[\"age\",\"count\"]",					"widget": "schema_col_names",					"title": "Output Column Names",					"description": "Name of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColTypes",					"value": "[\"INTEGER\",\"LONG\"]",					"widget": "schema_col_types",					"title": "Output Column Types",					"description": "Data Type of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "outputColFormats",					"value": "[\"\",\"\"]",					"widget": "schema_col_formats",					"title": "Output Column Formats",					"description": "Format of the Output Columns",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		},		{			"id": "11",			"name": "age vs count",			"details": "This node represents variation between data of various data series in Graphical format.<br>\n<br>\nMultiple numeric columns can be plotted along Y-Coordinate. Only one can be selected along X-Coordinate.<br>\n<br>\nVariation between dataseries is plotted as graph of the selected type such as Line-Chart, Bar-Chart or so on.<br>",			"examples": "",			"type": "transform",			"nodeClass": "fire.nodes.graph.NodeGraphValues",			"x": "374px",			"y": "378px",			"fields": [				{					"name": "storageLevel",					"value": "DEFAULT",					"widget": "array",					"title": "Output Storage Level",					"description": "Storage Level of the Output Datasets of this Node",					"optionsArray": [						"DEFAULT",						"NONE",						"DISK_ONLY",						"DISK_ONLY_2",						"MEMORY_ONLY",						"MEMORY_ONLY_2",						"MEMORY_ONLY_SER",						"MEMORY_ONLY_SER_2",						"MEMORY_AND_DISK",						"MEMORY_AND_DISK_2",						"MEMORY_AND_DISK_SER",						"MEMORY_AND_DISK_SER_2",						"OFF_HEAP"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "title",					"value": "age vs count",					"widget": "textfield",					"title": "Title",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "xlabel",					"value": "age",					"widget": "textfield",					"title": "X Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "ylabel",					"value": "count",					"widget": "textfield",					"title": "Y Label",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "maxValuesToDisplay",					"value": "20",					"widget": "textfield",					"title": "Max Values To Display",					"description": "Maximum number of values to display in result.",					"required": true,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "graphType",					"value": "LINECHART",					"widget": "enum",					"title": "Chart Type",					"optionsMap": {						"LINECHART": "Line Chart",						"COLUMNCHART": "Side by Side Bar Chart",						"BARCHART": "Stacked Bar Chart",						"PIE": "Pie Chart",						"SCATTERCHART": "Scatter Chart",						"DUALLINECHART": "Dual Line Chart",						"AREACHART": "Area Chart"					},					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "chartColors",					"value": "",					"widget": "colors",					"title": "Chart Colors",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "isStreaming",					"value": "false",					"widget": "array",					"title": "Is Streaming?",					"description": "Whether the Graph is a Streaming Graph or not",					"datatypes": [						"boolean"					],					"optionsArray": [						"true",						"false"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "xCol",					"value": "age",					"widget": "variable",					"title": "X Column",					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				},				{					"name": "yCols",					"value": "[\"count\"]",					"widget": "variables",					"title": "Y Columns",					"datatypes": [						"integer",						"long",						"double",						"float"					],					"required": false,					"display": true,					"editable": true,					"disableRefresh": false				}			],			"engine": "all"		}	],	"edges": [		{			"source": "1",			"target": "2",			"id": 1		},		{			"source": "2",			"target": "3",			"id": 2		},		{			"source": "1",			"target": "4",			"id": 3		},		{			"source": "4",			"target": "5",			"id": 4		},		{			"source": "1",			"target": "6",			"id": 5		},		{			"source": "1",			"target": "8",			"id": 6		},		{			"source": "8",			"target": "9",			"id": 7		},		{			"source": "1",			"target": "10",			"id": 8		},		{			"source": "10",			"target": "11",			"id": 9		}	],	"dataSetDetails": [],	"engine": "scala"}